# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_satellites_swig')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_satellites_swig')
    _satellites_swig = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_satellites_swig', [dirname(__file__)])
        except ImportError:
            import _satellites_swig
            return _satellites_swig
        try:
            _mod = imp.load_module('_satellites_swig', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _satellites_swig = swig_import_helper()
    del swig_import_helper
else:
    import _satellites_swig
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
    """high_res_timer_now() -> gr::high_res_timer_type"""
    return _satellites_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
    """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
    return _satellites_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
    """high_res_timer_tps() -> gr::high_res_timer_type"""
    return _satellites_swig.high_res_timer_tps()

def high_res_timer_epoch():
    """high_res_timer_epoch() -> gr::high_res_timer_type"""
    return _satellites_swig.high_res_timer_epoch()
class decode_rs(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(verbose, basis):
        """
        make(bool verbose, int basis) -> decode_rs_sptr

        Return a shared_ptr to a new instance of satellites::decode_rs.

        To avoid accidental use of raw pointers, satellites::decode_rs's constructor is in a private implementation class. satellites::decode_rs::make is the public interface for creating new instances.

        Params: (verbose, basis)
        """
        return _satellites_swig.decode_rs_make(verbose, basis)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_decode_rs
    __del__ = lambda self: None
decode_rs_swigregister = _satellites_swig.decode_rs_swigregister
decode_rs_swigregister(decode_rs)

def decode_rs_make(verbose, basis):
    """
    decode_rs_make(bool verbose, int basis) -> decode_rs_sptr

    Return a shared_ptr to a new instance of satellites::decode_rs.

    To avoid accidental use of raw pointers, satellites::decode_rs's constructor is in a private implementation class. satellites::decode_rs::make is the public interface for creating new instances.

    Params: (verbose, basis)
    """
    return _satellites_swig.decode_rs_make(verbose, basis)

class decode_rs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::decode_rs)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::decode_rs)> self) -> decode_rs_sptr
        __init__(boost::shared_ptr<(gr::satellites::decode_rs)> self, decode_rs p) -> decode_rs_sptr
        """
        this = _satellites_swig.new_decode_rs_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(decode_rs_sptr self) -> decode_rs"""
        return _satellites_swig.decode_rs_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_decode_rs_sptr
    __del__ = lambda self: None

    def make(self, verbose, basis):
        """
        make(decode_rs_sptr self, bool verbose, int basis) -> decode_rs_sptr

        Return a shared_ptr to a new instance of satellites::decode_rs.

        To avoid accidental use of raw pointers, satellites::decode_rs's constructor is in a private implementation class. satellites::decode_rs::make is the public interface for creating new instances.

        Params: (verbose, basis)
        """
        return _satellites_swig.decode_rs_sptr_make(self, verbose, basis)


    def history(self):
        """history(decode_rs_sptr self) -> unsigned int"""
        return _satellites_swig.decode_rs_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(decode_rs_sptr self, int which, int delay)
        declare_sample_delay(decode_rs_sptr self, unsigned int delay)
        """
        return _satellites_swig.decode_rs_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(decode_rs_sptr self, int which) -> unsigned int"""
        return _satellites_swig.decode_rs_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(decode_rs_sptr self) -> int"""
        return _satellites_swig.decode_rs_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(decode_rs_sptr self) -> double"""
        return _satellites_swig.decode_rs_sptr_relative_rate(self)


    def start(self):
        """start(decode_rs_sptr self) -> bool"""
        return _satellites_swig.decode_rs_sptr_start(self)


    def stop(self):
        """stop(decode_rs_sptr self) -> bool"""
        return _satellites_swig.decode_rs_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(decode_rs_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.decode_rs_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(decode_rs_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.decode_rs_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(decode_rs_sptr self) -> int"""
        return _satellites_swig.decode_rs_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(decode_rs_sptr self, int m)"""
        return _satellites_swig.decode_rs_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(decode_rs_sptr self)"""
        return _satellites_swig.decode_rs_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(decode_rs_sptr self) -> bool"""
        return _satellites_swig.decode_rs_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(decode_rs_sptr self, int m)"""
        return _satellites_swig.decode_rs_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(decode_rs_sptr self) -> int"""
        return _satellites_swig.decode_rs_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(decode_rs_sptr self, int i) -> long"""
        return _satellites_swig.decode_rs_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(decode_rs_sptr self, long max_output_buffer)
        set_max_output_buffer(decode_rs_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.decode_rs_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(decode_rs_sptr self, int i) -> long"""
        return _satellites_swig.decode_rs_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(decode_rs_sptr self, long min_output_buffer)
        set_min_output_buffer(decode_rs_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.decode_rs_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(decode_rs_sptr self, int which) -> float
        pc_input_buffers_full(decode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(decode_rs_sptr self, int which) -> float
        pc_input_buffers_full_avg(decode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(decode_rs_sptr self, int which) -> float
        pc_input_buffers_full_var(decode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(decode_rs_sptr self, int which) -> float
        pc_output_buffers_full(decode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(decode_rs_sptr self, int which) -> float
        pc_output_buffers_full_avg(decode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(decode_rs_sptr self, int which) -> float
        pc_output_buffers_full_var(decode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(decode_rs_sptr self) -> float"""
        return _satellites_swig.decode_rs_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(decode_rs_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.decode_rs_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(decode_rs_sptr self)"""
        return _satellites_swig.decode_rs_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(decode_rs_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.decode_rs_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(decode_rs_sptr self) -> int"""
        return _satellites_swig.decode_rs_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(decode_rs_sptr self) -> int"""
        return _satellites_swig.decode_rs_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(decode_rs_sptr self, int priority) -> int"""
        return _satellites_swig.decode_rs_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(decode_rs_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_sptr_name(self)


    def symbol_name(self):
        """symbol_name(decode_rs_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(decode_rs_sptr self) -> io_signature_sptr"""
        return _satellites_swig.decode_rs_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(decode_rs_sptr self) -> io_signature_sptr"""
        return _satellites_swig.decode_rs_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(decode_rs_sptr self) -> long"""
        return _satellites_swig.decode_rs_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(decode_rs_sptr self) -> basic_block_sptr"""
        return _satellites_swig.decode_rs_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(decode_rs_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.decode_rs_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(decode_rs_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(decode_rs_sptr self, std::string name)"""
        return _satellites_swig.decode_rs_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(decode_rs_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.decode_rs_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(decode_rs_sptr self) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(decode_rs_sptr self) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(decode_rs_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_sptr_message_subscribers(self, which_port)

decode_rs_sptr_swigregister = _satellites_swig.decode_rs_sptr_swigregister
decode_rs_sptr_swigregister(decode_rs_sptr)


decode_rs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
decode_rs = decode_rs.make;

class encode_rs(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(basis):
        """
        make(int basis) -> encode_rs_sptr

        Return a shared_ptr to a new instance of satellites::encode_rs.

        To avoid accidental use of raw pointers, satellites::encode_rs's constructor is in a private implementation class. satellites::encode_rs::make is the public interface for creating new instances.

        Params: (basis)
        """
        return _satellites_swig.encode_rs_make(basis)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_encode_rs
    __del__ = lambda self: None
encode_rs_swigregister = _satellites_swig.encode_rs_swigregister
encode_rs_swigregister(encode_rs)

def encode_rs_make(basis):
    """
    encode_rs_make(int basis) -> encode_rs_sptr

    Return a shared_ptr to a new instance of satellites::encode_rs.

    To avoid accidental use of raw pointers, satellites::encode_rs's constructor is in a private implementation class. satellites::encode_rs::make is the public interface for creating new instances.

    Params: (basis)
    """
    return _satellites_swig.encode_rs_make(basis)

class encode_rs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::encode_rs)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::encode_rs)> self) -> encode_rs_sptr
        __init__(boost::shared_ptr<(gr::satellites::encode_rs)> self, encode_rs p) -> encode_rs_sptr
        """
        this = _satellites_swig.new_encode_rs_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(encode_rs_sptr self) -> encode_rs"""
        return _satellites_swig.encode_rs_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_encode_rs_sptr
    __del__ = lambda self: None

    def make(self, basis):
        """
        make(encode_rs_sptr self, int basis) -> encode_rs_sptr

        Return a shared_ptr to a new instance of satellites::encode_rs.

        To avoid accidental use of raw pointers, satellites::encode_rs's constructor is in a private implementation class. satellites::encode_rs::make is the public interface for creating new instances.

        Params: (basis)
        """
        return _satellites_swig.encode_rs_sptr_make(self, basis)


    def history(self):
        """history(encode_rs_sptr self) -> unsigned int"""
        return _satellites_swig.encode_rs_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(encode_rs_sptr self, int which, int delay)
        declare_sample_delay(encode_rs_sptr self, unsigned int delay)
        """
        return _satellites_swig.encode_rs_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(encode_rs_sptr self, int which) -> unsigned int"""
        return _satellites_swig.encode_rs_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(encode_rs_sptr self) -> int"""
        return _satellites_swig.encode_rs_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(encode_rs_sptr self) -> double"""
        return _satellites_swig.encode_rs_sptr_relative_rate(self)


    def start(self):
        """start(encode_rs_sptr self) -> bool"""
        return _satellites_swig.encode_rs_sptr_start(self)


    def stop(self):
        """stop(encode_rs_sptr self) -> bool"""
        return _satellites_swig.encode_rs_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(encode_rs_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.encode_rs_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(encode_rs_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.encode_rs_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(encode_rs_sptr self) -> int"""
        return _satellites_swig.encode_rs_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(encode_rs_sptr self, int m)"""
        return _satellites_swig.encode_rs_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(encode_rs_sptr self)"""
        return _satellites_swig.encode_rs_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(encode_rs_sptr self) -> bool"""
        return _satellites_swig.encode_rs_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(encode_rs_sptr self, int m)"""
        return _satellites_swig.encode_rs_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(encode_rs_sptr self) -> int"""
        return _satellites_swig.encode_rs_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(encode_rs_sptr self, int i) -> long"""
        return _satellites_swig.encode_rs_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(encode_rs_sptr self, long max_output_buffer)
        set_max_output_buffer(encode_rs_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.encode_rs_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(encode_rs_sptr self, int i) -> long"""
        return _satellites_swig.encode_rs_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(encode_rs_sptr self, long min_output_buffer)
        set_min_output_buffer(encode_rs_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.encode_rs_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(encode_rs_sptr self, int which) -> float
        pc_input_buffers_full(encode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.encode_rs_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(encode_rs_sptr self, int which) -> float
        pc_input_buffers_full_avg(encode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.encode_rs_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(encode_rs_sptr self, int which) -> float
        pc_input_buffers_full_var(encode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.encode_rs_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(encode_rs_sptr self, int which) -> float
        pc_output_buffers_full(encode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.encode_rs_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(encode_rs_sptr self, int which) -> float
        pc_output_buffers_full_avg(encode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.encode_rs_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(encode_rs_sptr self, int which) -> float
        pc_output_buffers_full_var(encode_rs_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.encode_rs_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(encode_rs_sptr self) -> float"""
        return _satellites_swig.encode_rs_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(encode_rs_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.encode_rs_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(encode_rs_sptr self)"""
        return _satellites_swig.encode_rs_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(encode_rs_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.encode_rs_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(encode_rs_sptr self) -> int"""
        return _satellites_swig.encode_rs_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(encode_rs_sptr self) -> int"""
        return _satellites_swig.encode_rs_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(encode_rs_sptr self, int priority) -> int"""
        return _satellites_swig.encode_rs_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(encode_rs_sptr self) -> std::string"""
        return _satellites_swig.encode_rs_sptr_name(self)


    def symbol_name(self):
        """symbol_name(encode_rs_sptr self) -> std::string"""
        return _satellites_swig.encode_rs_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(encode_rs_sptr self) -> io_signature_sptr"""
        return _satellites_swig.encode_rs_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(encode_rs_sptr self) -> io_signature_sptr"""
        return _satellites_swig.encode_rs_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(encode_rs_sptr self) -> long"""
        return _satellites_swig.encode_rs_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(encode_rs_sptr self) -> basic_block_sptr"""
        return _satellites_swig.encode_rs_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(encode_rs_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.encode_rs_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(encode_rs_sptr self) -> std::string"""
        return _satellites_swig.encode_rs_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(encode_rs_sptr self, std::string name)"""
        return _satellites_swig.encode_rs_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(encode_rs_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.encode_rs_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(encode_rs_sptr self) -> swig_int_ptr"""
        return _satellites_swig.encode_rs_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(encode_rs_sptr self) -> swig_int_ptr"""
        return _satellites_swig.encode_rs_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(encode_rs_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.encode_rs_sptr_message_subscribers(self, which_port)

encode_rs_sptr_swigregister = _satellites_swig.encode_rs_sptr_swigregister
encode_rs_sptr_swigregister(encode_rs_sptr)


encode_rs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
encode_rs = encode_rs.make;

class ao40_syncframe(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(threshold):
        """
        make(int threshold) -> ao40_syncframe_sptr

        Return a shared_ptr to a new instance of ao40::syncframe.

        To avoid accidental use of raw pointers, ao40::syncframe's constructor is in a private implementation class. ao40::syncframe::make is the public interface for creating new instances.

        Params: (threshold)
        """
        return _satellites_swig.ao40_syncframe_make(threshold)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_ao40_syncframe
    __del__ = lambda self: None
ao40_syncframe_swigregister = _satellites_swig.ao40_syncframe_swigregister
ao40_syncframe_swigregister(ao40_syncframe)

def ao40_syncframe_make(threshold):
    """
    ao40_syncframe_make(int threshold) -> ao40_syncframe_sptr

    Return a shared_ptr to a new instance of ao40::syncframe.

    To avoid accidental use of raw pointers, ao40::syncframe's constructor is in a private implementation class. ao40::syncframe::make is the public interface for creating new instances.

    Params: (threshold)
    """
    return _satellites_swig.ao40_syncframe_make(threshold)

class ao40_syncframe_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::ao40_syncframe)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::ao40_syncframe)> self) -> ao40_syncframe_sptr
        __init__(boost::shared_ptr<(gr::satellites::ao40_syncframe)> self, ao40_syncframe p) -> ao40_syncframe_sptr
        """
        this = _satellites_swig.new_ao40_syncframe_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ao40_syncframe_sptr self) -> ao40_syncframe"""
        return _satellites_swig.ao40_syncframe_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_ao40_syncframe_sptr
    __del__ = lambda self: None

    def make(self, threshold):
        """
        make(ao40_syncframe_sptr self, int threshold) -> ao40_syncframe_sptr

        Return a shared_ptr to a new instance of ao40::syncframe.

        To avoid accidental use of raw pointers, ao40::syncframe's constructor is in a private implementation class. ao40::syncframe::make is the public interface for creating new instances.

        Params: (threshold)
        """
        return _satellites_swig.ao40_syncframe_sptr_make(self, threshold)


    def history(self):
        """history(ao40_syncframe_sptr self) -> unsigned int"""
        return _satellites_swig.ao40_syncframe_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ao40_syncframe_sptr self, int which, int delay)
        declare_sample_delay(ao40_syncframe_sptr self, unsigned int delay)
        """
        return _satellites_swig.ao40_syncframe_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ao40_syncframe_sptr self, int which) -> unsigned int"""
        return _satellites_swig.ao40_syncframe_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ao40_syncframe_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ao40_syncframe_sptr self) -> double"""
        return _satellites_swig.ao40_syncframe_sptr_relative_rate(self)


    def start(self):
        """start(ao40_syncframe_sptr self) -> bool"""
        return _satellites_swig.ao40_syncframe_sptr_start(self)


    def stop(self):
        """stop(ao40_syncframe_sptr self) -> bool"""
        return _satellites_swig.ao40_syncframe_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ao40_syncframe_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.ao40_syncframe_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ao40_syncframe_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.ao40_syncframe_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ao40_syncframe_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ao40_syncframe_sptr self, int m)"""
        return _satellites_swig.ao40_syncframe_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ao40_syncframe_sptr self)"""
        return _satellites_swig.ao40_syncframe_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ao40_syncframe_sptr self) -> bool"""
        return _satellites_swig.ao40_syncframe_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ao40_syncframe_sptr self, int m)"""
        return _satellites_swig.ao40_syncframe_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ao40_syncframe_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ao40_syncframe_sptr self, int i) -> long"""
        return _satellites_swig.ao40_syncframe_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ao40_syncframe_sptr self, long max_output_buffer)
        set_max_output_buffer(ao40_syncframe_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.ao40_syncframe_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ao40_syncframe_sptr self, int i) -> long"""
        return _satellites_swig.ao40_syncframe_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ao40_syncframe_sptr self, long min_output_buffer)
        set_min_output_buffer(ao40_syncframe_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.ao40_syncframe_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ao40_syncframe_sptr self, int which) -> float
        pc_input_buffers_full(ao40_syncframe_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ao40_syncframe_sptr self, int which) -> float
        pc_input_buffers_full_avg(ao40_syncframe_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ao40_syncframe_sptr self, int which) -> float
        pc_input_buffers_full_var(ao40_syncframe_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ao40_syncframe_sptr self, int which) -> float
        pc_output_buffers_full(ao40_syncframe_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ao40_syncframe_sptr self, int which) -> float
        pc_output_buffers_full_avg(ao40_syncframe_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ao40_syncframe_sptr self, int which) -> float
        pc_output_buffers_full_var(ao40_syncframe_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ao40_syncframe_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ao40_syncframe_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.ao40_syncframe_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ao40_syncframe_sptr self)"""
        return _satellites_swig.ao40_syncframe_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ao40_syncframe_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.ao40_syncframe_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ao40_syncframe_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ao40_syncframe_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ao40_syncframe_sptr self, int priority) -> int"""
        return _satellites_swig.ao40_syncframe_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ao40_syncframe_sptr self) -> std::string"""
        return _satellites_swig.ao40_syncframe_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ao40_syncframe_sptr self) -> std::string"""
        return _satellites_swig.ao40_syncframe_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ao40_syncframe_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_syncframe_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ao40_syncframe_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_syncframe_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ao40_syncframe_sptr self) -> long"""
        return _satellites_swig.ao40_syncframe_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ao40_syncframe_sptr self) -> basic_block_sptr"""
        return _satellites_swig.ao40_syncframe_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ao40_syncframe_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.ao40_syncframe_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ao40_syncframe_sptr self) -> std::string"""
        return _satellites_swig.ao40_syncframe_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ao40_syncframe_sptr self, std::string name)"""
        return _satellites_swig.ao40_syncframe_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ao40_syncframe_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.ao40_syncframe_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ao40_syncframe_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_syncframe_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ao40_syncframe_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_syncframe_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ao40_syncframe_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.ao40_syncframe_sptr_message_subscribers(self, which_port)

ao40_syncframe_sptr_swigregister = _satellites_swig.ao40_syncframe_sptr_swigregister
ao40_syncframe_sptr_swigregister(ao40_syncframe_sptr)


ao40_syncframe_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ao40_syncframe = ao40_syncframe.make;

class ao40_deinterleaver(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """
        make() -> ao40_deinterleaver_sptr

        Return a shared_ptr to a new instance of satellites::ao40_deinterleaver.

        To avoid accidental use of raw pointers, satellites::ao40_deinterleaver's constructor is in a private implementation class. satellites::ao40_deinterleaver::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.ao40_deinterleaver_make()

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_ao40_deinterleaver
    __del__ = lambda self: None
ao40_deinterleaver_swigregister = _satellites_swig.ao40_deinterleaver_swigregister
ao40_deinterleaver_swigregister(ao40_deinterleaver)

def ao40_deinterleaver_make():
    """
    ao40_deinterleaver_make() -> ao40_deinterleaver_sptr

    Return a shared_ptr to a new instance of satellites::ao40_deinterleaver.

    To avoid accidental use of raw pointers, satellites::ao40_deinterleaver's constructor is in a private implementation class. satellites::ao40_deinterleaver::make is the public interface for creating new instances.

    Params: (NONE)
    """
    return _satellites_swig.ao40_deinterleaver_make()

class ao40_deinterleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::ao40_deinterleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::ao40_deinterleaver)> self) -> ao40_deinterleaver_sptr
        __init__(boost::shared_ptr<(gr::satellites::ao40_deinterleaver)> self, ao40_deinterleaver p) -> ao40_deinterleaver_sptr
        """
        this = _satellites_swig.new_ao40_deinterleaver_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ao40_deinterleaver_sptr self) -> ao40_deinterleaver"""
        return _satellites_swig.ao40_deinterleaver_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_ao40_deinterleaver_sptr
    __del__ = lambda self: None

    def make(self):
        """
        make(ao40_deinterleaver_sptr self) -> ao40_deinterleaver_sptr

        Return a shared_ptr to a new instance of satellites::ao40_deinterleaver.

        To avoid accidental use of raw pointers, satellites::ao40_deinterleaver's constructor is in a private implementation class. satellites::ao40_deinterleaver::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.ao40_deinterleaver_sptr_make(self)


    def history(self):
        """history(ao40_deinterleaver_sptr self) -> unsigned int"""
        return _satellites_swig.ao40_deinterleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ao40_deinterleaver_sptr self, int which, int delay)
        declare_sample_delay(ao40_deinterleaver_sptr self, unsigned int delay)
        """
        return _satellites_swig.ao40_deinterleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ao40_deinterleaver_sptr self, int which) -> unsigned int"""
        return _satellites_swig.ao40_deinterleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ao40_deinterleaver_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ao40_deinterleaver_sptr self) -> double"""
        return _satellites_swig.ao40_deinterleaver_sptr_relative_rate(self)


    def start(self):
        """start(ao40_deinterleaver_sptr self) -> bool"""
        return _satellites_swig.ao40_deinterleaver_sptr_start(self)


    def stop(self):
        """stop(ao40_deinterleaver_sptr self) -> bool"""
        return _satellites_swig.ao40_deinterleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ao40_deinterleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.ao40_deinterleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ao40_deinterleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.ao40_deinterleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ao40_deinterleaver_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ao40_deinterleaver_sptr self, int m)"""
        return _satellites_swig.ao40_deinterleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ao40_deinterleaver_sptr self)"""
        return _satellites_swig.ao40_deinterleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ao40_deinterleaver_sptr self) -> bool"""
        return _satellites_swig.ao40_deinterleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ao40_deinterleaver_sptr self, int m)"""
        return _satellites_swig.ao40_deinterleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ao40_deinterleaver_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ao40_deinterleaver_sptr self, int i) -> long"""
        return _satellites_swig.ao40_deinterleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ao40_deinterleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(ao40_deinterleaver_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.ao40_deinterleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ao40_deinterleaver_sptr self, int i) -> long"""
        return _satellites_swig.ao40_deinterleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ao40_deinterleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(ao40_deinterleaver_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.ao40_deinterleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ao40_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full(ao40_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ao40_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(ao40_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ao40_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(ao40_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ao40_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full(ao40_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ao40_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(ao40_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ao40_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(ao40_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ao40_deinterleaver_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ao40_deinterleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.ao40_deinterleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ao40_deinterleaver_sptr self)"""
        return _satellites_swig.ao40_deinterleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ao40_deinterleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.ao40_deinterleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ao40_deinterleaver_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ao40_deinterleaver_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ao40_deinterleaver_sptr self, int priority) -> int"""
        return _satellites_swig.ao40_deinterleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ao40_deinterleaver_sptr self) -> std::string"""
        return _satellites_swig.ao40_deinterleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ao40_deinterleaver_sptr self) -> std::string"""
        return _satellites_swig.ao40_deinterleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ao40_deinterleaver_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_deinterleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ao40_deinterleaver_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_deinterleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ao40_deinterleaver_sptr self) -> long"""
        return _satellites_swig.ao40_deinterleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ao40_deinterleaver_sptr self) -> basic_block_sptr"""
        return _satellites_swig.ao40_deinterleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ao40_deinterleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.ao40_deinterleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ao40_deinterleaver_sptr self) -> std::string"""
        return _satellites_swig.ao40_deinterleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ao40_deinterleaver_sptr self, std::string name)"""
        return _satellites_swig.ao40_deinterleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ao40_deinterleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.ao40_deinterleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ao40_deinterleaver_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_deinterleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ao40_deinterleaver_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_deinterleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ao40_deinterleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.ao40_deinterleaver_sptr_message_subscribers(self, which_port)

ao40_deinterleaver_sptr_swigregister = _satellites_swig.ao40_deinterleaver_sptr_swigregister
ao40_deinterleaver_sptr_swigregister(ao40_deinterleaver_sptr)


ao40_deinterleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ao40_deinterleaver = ao40_deinterleaver.make;

class ao40_rs_decoder(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(verbose):
        """
        make(bool verbose) -> ao40_rs_decoder_sptr

        Return a shared_ptr to a new instance of satellites::ao40_rs_decoder.

        To avoid accidental use of raw pointers, satellites::ao40_rs_decoder's constructor is in a private implementation class. satellites::ao40_rs_decoder::make is the public interface for creating new instances.

        Params: (verbose)
        """
        return _satellites_swig.ao40_rs_decoder_make(verbose)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_ao40_rs_decoder
    __del__ = lambda self: None
ao40_rs_decoder_swigregister = _satellites_swig.ao40_rs_decoder_swigregister
ao40_rs_decoder_swigregister(ao40_rs_decoder)

def ao40_rs_decoder_make(verbose):
    """
    ao40_rs_decoder_make(bool verbose) -> ao40_rs_decoder_sptr

    Return a shared_ptr to a new instance of satellites::ao40_rs_decoder.

    To avoid accidental use of raw pointers, satellites::ao40_rs_decoder's constructor is in a private implementation class. satellites::ao40_rs_decoder::make is the public interface for creating new instances.

    Params: (verbose)
    """
    return _satellites_swig.ao40_rs_decoder_make(verbose)

class ao40_rs_decoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::ao40_rs_decoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::ao40_rs_decoder)> self) -> ao40_rs_decoder_sptr
        __init__(boost::shared_ptr<(gr::satellites::ao40_rs_decoder)> self, ao40_rs_decoder p) -> ao40_rs_decoder_sptr
        """
        this = _satellites_swig.new_ao40_rs_decoder_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ao40_rs_decoder_sptr self) -> ao40_rs_decoder"""
        return _satellites_swig.ao40_rs_decoder_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_ao40_rs_decoder_sptr
    __del__ = lambda self: None

    def make(self, verbose):
        """
        make(ao40_rs_decoder_sptr self, bool verbose) -> ao40_rs_decoder_sptr

        Return a shared_ptr to a new instance of satellites::ao40_rs_decoder.

        To avoid accidental use of raw pointers, satellites::ao40_rs_decoder's constructor is in a private implementation class. satellites::ao40_rs_decoder::make is the public interface for creating new instances.

        Params: (verbose)
        """
        return _satellites_swig.ao40_rs_decoder_sptr_make(self, verbose)


    def history(self):
        """history(ao40_rs_decoder_sptr self) -> unsigned int"""
        return _satellites_swig.ao40_rs_decoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ao40_rs_decoder_sptr self, int which, int delay)
        declare_sample_delay(ao40_rs_decoder_sptr self, unsigned int delay)
        """
        return _satellites_swig.ao40_rs_decoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ao40_rs_decoder_sptr self, int which) -> unsigned int"""
        return _satellites_swig.ao40_rs_decoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ao40_rs_decoder_sptr self) -> int"""
        return _satellites_swig.ao40_rs_decoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ao40_rs_decoder_sptr self) -> double"""
        return _satellites_swig.ao40_rs_decoder_sptr_relative_rate(self)


    def start(self):
        """start(ao40_rs_decoder_sptr self) -> bool"""
        return _satellites_swig.ao40_rs_decoder_sptr_start(self)


    def stop(self):
        """stop(ao40_rs_decoder_sptr self) -> bool"""
        return _satellites_swig.ao40_rs_decoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ao40_rs_decoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.ao40_rs_decoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ao40_rs_decoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.ao40_rs_decoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ao40_rs_decoder_sptr self) -> int"""
        return _satellites_swig.ao40_rs_decoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ao40_rs_decoder_sptr self, int m)"""
        return _satellites_swig.ao40_rs_decoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ao40_rs_decoder_sptr self)"""
        return _satellites_swig.ao40_rs_decoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ao40_rs_decoder_sptr self) -> bool"""
        return _satellites_swig.ao40_rs_decoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ao40_rs_decoder_sptr self, int m)"""
        return _satellites_swig.ao40_rs_decoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ao40_rs_decoder_sptr self) -> int"""
        return _satellites_swig.ao40_rs_decoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ao40_rs_decoder_sptr self, int i) -> long"""
        return _satellites_swig.ao40_rs_decoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ao40_rs_decoder_sptr self, long max_output_buffer)
        set_max_output_buffer(ao40_rs_decoder_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.ao40_rs_decoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ao40_rs_decoder_sptr self, int i) -> long"""
        return _satellites_swig.ao40_rs_decoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ao40_rs_decoder_sptr self, long min_output_buffer)
        set_min_output_buffer(ao40_rs_decoder_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.ao40_rs_decoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ao40_rs_decoder_sptr self, int which) -> float
        pc_input_buffers_full(ao40_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_rs_decoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ao40_rs_decoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(ao40_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_rs_decoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ao40_rs_decoder_sptr self, int which) -> float
        pc_input_buffers_full_var(ao40_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_rs_decoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ao40_rs_decoder_sptr self, int which) -> float
        pc_output_buffers_full(ao40_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_rs_decoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ao40_rs_decoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(ao40_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_rs_decoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ao40_rs_decoder_sptr self, int which) -> float
        pc_output_buffers_full_var(ao40_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_rs_decoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ao40_rs_decoder_sptr self) -> float"""
        return _satellites_swig.ao40_rs_decoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ao40_rs_decoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.ao40_rs_decoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ao40_rs_decoder_sptr self)"""
        return _satellites_swig.ao40_rs_decoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ao40_rs_decoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.ao40_rs_decoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ao40_rs_decoder_sptr self) -> int"""
        return _satellites_swig.ao40_rs_decoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ao40_rs_decoder_sptr self) -> int"""
        return _satellites_swig.ao40_rs_decoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ao40_rs_decoder_sptr self, int priority) -> int"""
        return _satellites_swig.ao40_rs_decoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ao40_rs_decoder_sptr self) -> std::string"""
        return _satellites_swig.ao40_rs_decoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ao40_rs_decoder_sptr self) -> std::string"""
        return _satellites_swig.ao40_rs_decoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ao40_rs_decoder_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_rs_decoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ao40_rs_decoder_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_rs_decoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ao40_rs_decoder_sptr self) -> long"""
        return _satellites_swig.ao40_rs_decoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ao40_rs_decoder_sptr self) -> basic_block_sptr"""
        return _satellites_swig.ao40_rs_decoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ao40_rs_decoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.ao40_rs_decoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ao40_rs_decoder_sptr self) -> std::string"""
        return _satellites_swig.ao40_rs_decoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ao40_rs_decoder_sptr self, std::string name)"""
        return _satellites_swig.ao40_rs_decoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ao40_rs_decoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.ao40_rs_decoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ao40_rs_decoder_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_rs_decoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ao40_rs_decoder_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_rs_decoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ao40_rs_decoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.ao40_rs_decoder_sptr_message_subscribers(self, which_port)

ao40_rs_decoder_sptr_swigregister = _satellites_swig.ao40_rs_decoder_sptr_swigregister
ao40_rs_decoder_sptr_swigregister(ao40_rs_decoder_sptr)


ao40_rs_decoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ao40_rs_decoder = ao40_rs_decoder.make;

class ax100_decode(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(verbose):
        """
        make(bool verbose) -> ax100_decode_sptr

        Return a shared_ptr to a new instance of satellites::ax100_decode.

        To avoid accidental use of raw pointers, satellites::ax100_decode's constructor is in a private implementation class. satellites::ax100_decode::make is the public interface for creating new instances.

        Params: (verbose)
        """
        return _satellites_swig.ax100_decode_make(verbose)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_ax100_decode
    __del__ = lambda self: None
ax100_decode_swigregister = _satellites_swig.ax100_decode_swigregister
ax100_decode_swigregister(ax100_decode)

def ax100_decode_make(verbose):
    """
    ax100_decode_make(bool verbose) -> ax100_decode_sptr

    Return a shared_ptr to a new instance of satellites::ax100_decode.

    To avoid accidental use of raw pointers, satellites::ax100_decode's constructor is in a private implementation class. satellites::ax100_decode::make is the public interface for creating new instances.

    Params: (verbose)
    """
    return _satellites_swig.ax100_decode_make(verbose)

class ax100_decode_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::ax100_decode)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::ax100_decode)> self) -> ax100_decode_sptr
        __init__(boost::shared_ptr<(gr::satellites::ax100_decode)> self, ax100_decode p) -> ax100_decode_sptr
        """
        this = _satellites_swig.new_ax100_decode_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ax100_decode_sptr self) -> ax100_decode"""
        return _satellites_swig.ax100_decode_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_ax100_decode_sptr
    __del__ = lambda self: None

    def make(self, verbose):
        """
        make(ax100_decode_sptr self, bool verbose) -> ax100_decode_sptr

        Return a shared_ptr to a new instance of satellites::ax100_decode.

        To avoid accidental use of raw pointers, satellites::ax100_decode's constructor is in a private implementation class. satellites::ax100_decode::make is the public interface for creating new instances.

        Params: (verbose)
        """
        return _satellites_swig.ax100_decode_sptr_make(self, verbose)


    def history(self):
        """history(ax100_decode_sptr self) -> unsigned int"""
        return _satellites_swig.ax100_decode_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ax100_decode_sptr self, int which, int delay)
        declare_sample_delay(ax100_decode_sptr self, unsigned int delay)
        """
        return _satellites_swig.ax100_decode_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ax100_decode_sptr self, int which) -> unsigned int"""
        return _satellites_swig.ax100_decode_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ax100_decode_sptr self) -> int"""
        return _satellites_swig.ax100_decode_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ax100_decode_sptr self) -> double"""
        return _satellites_swig.ax100_decode_sptr_relative_rate(self)


    def start(self):
        """start(ax100_decode_sptr self) -> bool"""
        return _satellites_swig.ax100_decode_sptr_start(self)


    def stop(self):
        """stop(ax100_decode_sptr self) -> bool"""
        return _satellites_swig.ax100_decode_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ax100_decode_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.ax100_decode_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ax100_decode_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.ax100_decode_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ax100_decode_sptr self) -> int"""
        return _satellites_swig.ax100_decode_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ax100_decode_sptr self, int m)"""
        return _satellites_swig.ax100_decode_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ax100_decode_sptr self)"""
        return _satellites_swig.ax100_decode_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ax100_decode_sptr self) -> bool"""
        return _satellites_swig.ax100_decode_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ax100_decode_sptr self, int m)"""
        return _satellites_swig.ax100_decode_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ax100_decode_sptr self) -> int"""
        return _satellites_swig.ax100_decode_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ax100_decode_sptr self, int i) -> long"""
        return _satellites_swig.ax100_decode_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ax100_decode_sptr self, long max_output_buffer)
        set_max_output_buffer(ax100_decode_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.ax100_decode_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ax100_decode_sptr self, int i) -> long"""
        return _satellites_swig.ax100_decode_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ax100_decode_sptr self, long min_output_buffer)
        set_min_output_buffer(ax100_decode_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.ax100_decode_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ax100_decode_sptr self, int which) -> float
        pc_input_buffers_full(ax100_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ax100_decode_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ax100_decode_sptr self, int which) -> float
        pc_input_buffers_full_avg(ax100_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ax100_decode_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ax100_decode_sptr self, int which) -> float
        pc_input_buffers_full_var(ax100_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ax100_decode_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ax100_decode_sptr self, int which) -> float
        pc_output_buffers_full(ax100_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ax100_decode_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ax100_decode_sptr self, int which) -> float
        pc_output_buffers_full_avg(ax100_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ax100_decode_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ax100_decode_sptr self, int which) -> float
        pc_output_buffers_full_var(ax100_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ax100_decode_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ax100_decode_sptr self) -> float"""
        return _satellites_swig.ax100_decode_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ax100_decode_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.ax100_decode_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ax100_decode_sptr self)"""
        return _satellites_swig.ax100_decode_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ax100_decode_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.ax100_decode_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ax100_decode_sptr self) -> int"""
        return _satellites_swig.ax100_decode_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ax100_decode_sptr self) -> int"""
        return _satellites_swig.ax100_decode_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ax100_decode_sptr self, int priority) -> int"""
        return _satellites_swig.ax100_decode_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ax100_decode_sptr self) -> std::string"""
        return _satellites_swig.ax100_decode_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ax100_decode_sptr self) -> std::string"""
        return _satellites_swig.ax100_decode_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ax100_decode_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ax100_decode_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ax100_decode_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ax100_decode_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ax100_decode_sptr self) -> long"""
        return _satellites_swig.ax100_decode_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ax100_decode_sptr self) -> basic_block_sptr"""
        return _satellites_swig.ax100_decode_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ax100_decode_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.ax100_decode_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ax100_decode_sptr self) -> std::string"""
        return _satellites_swig.ax100_decode_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ax100_decode_sptr self, std::string name)"""
        return _satellites_swig.ax100_decode_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ax100_decode_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.ax100_decode_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ax100_decode_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ax100_decode_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ax100_decode_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ax100_decode_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ax100_decode_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.ax100_decode_sptr_message_subscribers(self, which_port)

ax100_decode_sptr_swigregister = _satellites_swig.ax100_decode_sptr_swigregister
ax100_decode_sptr_swigregister(ax100_decode_sptr)


ax100_decode_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ax100_decode = ax100_decode.make;

class u482c_decode(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(verbose, viterbi, scrambler, rs):
        """
        make(bool verbose, int viterbi, int scrambler, int rs) -> u482c_decode_sptr

        Return a shared_ptr to a new instance of satellites::u482c_decode.

        To avoid accidental use of raw pointers, satellites::u482c_decode's constructor is in a private implementation class. satellites::u482c_decode::make is the public interface for creating new instances.

        Params: (verbose, viterbi, scrambler, rs)
        """
        return _satellites_swig.u482c_decode_make(verbose, viterbi, scrambler, rs)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_u482c_decode
    __del__ = lambda self: None
u482c_decode_swigregister = _satellites_swig.u482c_decode_swigregister
u482c_decode_swigregister(u482c_decode)

def u482c_decode_make(verbose, viterbi, scrambler, rs):
    """
    u482c_decode_make(bool verbose, int viterbi, int scrambler, int rs) -> u482c_decode_sptr

    Return a shared_ptr to a new instance of satellites::u482c_decode.

    To avoid accidental use of raw pointers, satellites::u482c_decode's constructor is in a private implementation class. satellites::u482c_decode::make is the public interface for creating new instances.

    Params: (verbose, viterbi, scrambler, rs)
    """
    return _satellites_swig.u482c_decode_make(verbose, viterbi, scrambler, rs)

class u482c_decode_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::u482c_decode)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::u482c_decode)> self) -> u482c_decode_sptr
        __init__(boost::shared_ptr<(gr::satellites::u482c_decode)> self, u482c_decode p) -> u482c_decode_sptr
        """
        this = _satellites_swig.new_u482c_decode_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(u482c_decode_sptr self) -> u482c_decode"""
        return _satellites_swig.u482c_decode_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_u482c_decode_sptr
    __del__ = lambda self: None

    def make(self, verbose, viterbi, scrambler, rs):
        """
        make(u482c_decode_sptr self, bool verbose, int viterbi, int scrambler, int rs) -> u482c_decode_sptr

        Return a shared_ptr to a new instance of satellites::u482c_decode.

        To avoid accidental use of raw pointers, satellites::u482c_decode's constructor is in a private implementation class. satellites::u482c_decode::make is the public interface for creating new instances.

        Params: (verbose, viterbi, scrambler, rs)
        """
        return _satellites_swig.u482c_decode_sptr_make(self, verbose, viterbi, scrambler, rs)


    def history(self):
        """history(u482c_decode_sptr self) -> unsigned int"""
        return _satellites_swig.u482c_decode_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(u482c_decode_sptr self, int which, int delay)
        declare_sample_delay(u482c_decode_sptr self, unsigned int delay)
        """
        return _satellites_swig.u482c_decode_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(u482c_decode_sptr self, int which) -> unsigned int"""
        return _satellites_swig.u482c_decode_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(u482c_decode_sptr self) -> int"""
        return _satellites_swig.u482c_decode_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(u482c_decode_sptr self) -> double"""
        return _satellites_swig.u482c_decode_sptr_relative_rate(self)


    def start(self):
        """start(u482c_decode_sptr self) -> bool"""
        return _satellites_swig.u482c_decode_sptr_start(self)


    def stop(self):
        """stop(u482c_decode_sptr self) -> bool"""
        return _satellites_swig.u482c_decode_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(u482c_decode_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.u482c_decode_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(u482c_decode_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.u482c_decode_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(u482c_decode_sptr self) -> int"""
        return _satellites_swig.u482c_decode_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(u482c_decode_sptr self, int m)"""
        return _satellites_swig.u482c_decode_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(u482c_decode_sptr self)"""
        return _satellites_swig.u482c_decode_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(u482c_decode_sptr self) -> bool"""
        return _satellites_swig.u482c_decode_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(u482c_decode_sptr self, int m)"""
        return _satellites_swig.u482c_decode_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(u482c_decode_sptr self) -> int"""
        return _satellites_swig.u482c_decode_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(u482c_decode_sptr self, int i) -> long"""
        return _satellites_swig.u482c_decode_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(u482c_decode_sptr self, long max_output_buffer)
        set_max_output_buffer(u482c_decode_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.u482c_decode_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(u482c_decode_sptr self, int i) -> long"""
        return _satellites_swig.u482c_decode_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(u482c_decode_sptr self, long min_output_buffer)
        set_min_output_buffer(u482c_decode_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.u482c_decode_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(u482c_decode_sptr self, int which) -> float
        pc_input_buffers_full(u482c_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.u482c_decode_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(u482c_decode_sptr self, int which) -> float
        pc_input_buffers_full_avg(u482c_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.u482c_decode_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(u482c_decode_sptr self, int which) -> float
        pc_input_buffers_full_var(u482c_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.u482c_decode_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(u482c_decode_sptr self, int which) -> float
        pc_output_buffers_full(u482c_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.u482c_decode_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(u482c_decode_sptr self, int which) -> float
        pc_output_buffers_full_avg(u482c_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.u482c_decode_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(u482c_decode_sptr self, int which) -> float
        pc_output_buffers_full_var(u482c_decode_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.u482c_decode_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(u482c_decode_sptr self) -> float"""
        return _satellites_swig.u482c_decode_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(u482c_decode_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.u482c_decode_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(u482c_decode_sptr self)"""
        return _satellites_swig.u482c_decode_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(u482c_decode_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.u482c_decode_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(u482c_decode_sptr self) -> int"""
        return _satellites_swig.u482c_decode_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(u482c_decode_sptr self) -> int"""
        return _satellites_swig.u482c_decode_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(u482c_decode_sptr self, int priority) -> int"""
        return _satellites_swig.u482c_decode_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(u482c_decode_sptr self) -> std::string"""
        return _satellites_swig.u482c_decode_sptr_name(self)


    def symbol_name(self):
        """symbol_name(u482c_decode_sptr self) -> std::string"""
        return _satellites_swig.u482c_decode_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(u482c_decode_sptr self) -> io_signature_sptr"""
        return _satellites_swig.u482c_decode_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(u482c_decode_sptr self) -> io_signature_sptr"""
        return _satellites_swig.u482c_decode_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(u482c_decode_sptr self) -> long"""
        return _satellites_swig.u482c_decode_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(u482c_decode_sptr self) -> basic_block_sptr"""
        return _satellites_swig.u482c_decode_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(u482c_decode_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.u482c_decode_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(u482c_decode_sptr self) -> std::string"""
        return _satellites_swig.u482c_decode_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(u482c_decode_sptr self, std::string name)"""
        return _satellites_swig.u482c_decode_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(u482c_decode_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.u482c_decode_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(u482c_decode_sptr self) -> swig_int_ptr"""
        return _satellites_swig.u482c_decode_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(u482c_decode_sptr self) -> swig_int_ptr"""
        return _satellites_swig.u482c_decode_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(u482c_decode_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.u482c_decode_sptr_message_subscribers(self, which_port)

u482c_decode_sptr_swigregister = _satellites_swig.u482c_decode_sptr_swigregister
u482c_decode_sptr_swigregister(u482c_decode_sptr)


u482c_decode_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
u482c_decode = u482c_decode.make;

class lilacsat1_demux(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(tag):
        """
        make(std::string tag) -> lilacsat1_demux_sptr

        Return a shared_ptr to a new instance of satellites::lilacsat1_demux.

        To avoid accidental use of raw pointers, satellits::lilacsat1_demux's constructor is in a private implementation class. satellites::lilacsat1_demux::make is the public interface for creating new instances.

        Params: (tag)
        """
        return _satellites_swig.lilacsat1_demux_make(tag)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_lilacsat1_demux
    __del__ = lambda self: None
lilacsat1_demux_swigregister = _satellites_swig.lilacsat1_demux_swigregister
lilacsat1_demux_swigregister(lilacsat1_demux)

def lilacsat1_demux_make(tag):
    """
    lilacsat1_demux_make(std::string tag) -> lilacsat1_demux_sptr

    Return a shared_ptr to a new instance of satellites::lilacsat1_demux.

    To avoid accidental use of raw pointers, satellits::lilacsat1_demux's constructor is in a private implementation class. satellites::lilacsat1_demux::make is the public interface for creating new instances.

    Params: (tag)
    """
    return _satellites_swig.lilacsat1_demux_make(tag)

class lilacsat1_demux_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::lilacsat1_demux)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::lilacsat1_demux)> self) -> lilacsat1_demux_sptr
        __init__(boost::shared_ptr<(gr::satellites::lilacsat1_demux)> self, lilacsat1_demux p) -> lilacsat1_demux_sptr
        """
        this = _satellites_swig.new_lilacsat1_demux_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(lilacsat1_demux_sptr self) -> lilacsat1_demux"""
        return _satellites_swig.lilacsat1_demux_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_lilacsat1_demux_sptr
    __del__ = lambda self: None

    def make(self, tag):
        """
        make(lilacsat1_demux_sptr self, std::string tag) -> lilacsat1_demux_sptr

        Return a shared_ptr to a new instance of satellites::lilacsat1_demux.

        To avoid accidental use of raw pointers, satellits::lilacsat1_demux's constructor is in a private implementation class. satellites::lilacsat1_demux::make is the public interface for creating new instances.

        Params: (tag)
        """
        return _satellites_swig.lilacsat1_demux_sptr_make(self, tag)


    def history(self):
        """history(lilacsat1_demux_sptr self) -> unsigned int"""
        return _satellites_swig.lilacsat1_demux_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(lilacsat1_demux_sptr self, int which, int delay)
        declare_sample_delay(lilacsat1_demux_sptr self, unsigned int delay)
        """
        return _satellites_swig.lilacsat1_demux_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(lilacsat1_demux_sptr self, int which) -> unsigned int"""
        return _satellites_swig.lilacsat1_demux_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(lilacsat1_demux_sptr self) -> int"""
        return _satellites_swig.lilacsat1_demux_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(lilacsat1_demux_sptr self) -> double"""
        return _satellites_swig.lilacsat1_demux_sptr_relative_rate(self)


    def start(self):
        """start(lilacsat1_demux_sptr self) -> bool"""
        return _satellites_swig.lilacsat1_demux_sptr_start(self)


    def stop(self):
        """stop(lilacsat1_demux_sptr self) -> bool"""
        return _satellites_swig.lilacsat1_demux_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(lilacsat1_demux_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.lilacsat1_demux_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(lilacsat1_demux_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.lilacsat1_demux_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(lilacsat1_demux_sptr self) -> int"""
        return _satellites_swig.lilacsat1_demux_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(lilacsat1_demux_sptr self, int m)"""
        return _satellites_swig.lilacsat1_demux_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(lilacsat1_demux_sptr self)"""
        return _satellites_swig.lilacsat1_demux_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(lilacsat1_demux_sptr self) -> bool"""
        return _satellites_swig.lilacsat1_demux_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(lilacsat1_demux_sptr self, int m)"""
        return _satellites_swig.lilacsat1_demux_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(lilacsat1_demux_sptr self) -> int"""
        return _satellites_swig.lilacsat1_demux_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(lilacsat1_demux_sptr self, int i) -> long"""
        return _satellites_swig.lilacsat1_demux_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(lilacsat1_demux_sptr self, long max_output_buffer)
        set_max_output_buffer(lilacsat1_demux_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.lilacsat1_demux_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(lilacsat1_demux_sptr self, int i) -> long"""
        return _satellites_swig.lilacsat1_demux_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(lilacsat1_demux_sptr self, long min_output_buffer)
        set_min_output_buffer(lilacsat1_demux_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.lilacsat1_demux_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(lilacsat1_demux_sptr self, int which) -> float
        pc_input_buffers_full(lilacsat1_demux_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.lilacsat1_demux_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(lilacsat1_demux_sptr self, int which) -> float
        pc_input_buffers_full_avg(lilacsat1_demux_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.lilacsat1_demux_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(lilacsat1_demux_sptr self, int which) -> float
        pc_input_buffers_full_var(lilacsat1_demux_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.lilacsat1_demux_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(lilacsat1_demux_sptr self, int which) -> float
        pc_output_buffers_full(lilacsat1_demux_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.lilacsat1_demux_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(lilacsat1_demux_sptr self, int which) -> float
        pc_output_buffers_full_avg(lilacsat1_demux_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.lilacsat1_demux_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(lilacsat1_demux_sptr self, int which) -> float
        pc_output_buffers_full_var(lilacsat1_demux_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.lilacsat1_demux_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(lilacsat1_demux_sptr self) -> float"""
        return _satellites_swig.lilacsat1_demux_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(lilacsat1_demux_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.lilacsat1_demux_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(lilacsat1_demux_sptr self)"""
        return _satellites_swig.lilacsat1_demux_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(lilacsat1_demux_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.lilacsat1_demux_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(lilacsat1_demux_sptr self) -> int"""
        return _satellites_swig.lilacsat1_demux_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(lilacsat1_demux_sptr self) -> int"""
        return _satellites_swig.lilacsat1_demux_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(lilacsat1_demux_sptr self, int priority) -> int"""
        return _satellites_swig.lilacsat1_demux_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(lilacsat1_demux_sptr self) -> std::string"""
        return _satellites_swig.lilacsat1_demux_sptr_name(self)


    def symbol_name(self):
        """symbol_name(lilacsat1_demux_sptr self) -> std::string"""
        return _satellites_swig.lilacsat1_demux_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(lilacsat1_demux_sptr self) -> io_signature_sptr"""
        return _satellites_swig.lilacsat1_demux_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(lilacsat1_demux_sptr self) -> io_signature_sptr"""
        return _satellites_swig.lilacsat1_demux_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(lilacsat1_demux_sptr self) -> long"""
        return _satellites_swig.lilacsat1_demux_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(lilacsat1_demux_sptr self) -> basic_block_sptr"""
        return _satellites_swig.lilacsat1_demux_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(lilacsat1_demux_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.lilacsat1_demux_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(lilacsat1_demux_sptr self) -> std::string"""
        return _satellites_swig.lilacsat1_demux_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(lilacsat1_demux_sptr self, std::string name)"""
        return _satellites_swig.lilacsat1_demux_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(lilacsat1_demux_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.lilacsat1_demux_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(lilacsat1_demux_sptr self) -> swig_int_ptr"""
        return _satellites_swig.lilacsat1_demux_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(lilacsat1_demux_sptr self) -> swig_int_ptr"""
        return _satellites_swig.lilacsat1_demux_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(lilacsat1_demux_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.lilacsat1_demux_sptr_message_subscribers(self, which_port)

lilacsat1_demux_sptr_swigregister = _satellites_swig.lilacsat1_demux_sptr_swigregister
lilacsat1_demux_sptr_swigregister(lilacsat1_demux_sptr)


lilacsat1_demux_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
lilacsat1_demux = lilacsat1_demux.make;

class varlen_packet_tagger(object):
    """
    Examine input stream for sync tags and extract packet length.

    input: stream of bits (unpacked bytes) with sync tags output: a tagged stream of bits containing just the received packets

    This block uses the sync tag on the input stream to identify the header of packets. The length of each packet is extracted from the stream's header. The length of the header field and the endianness are parameters.
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay):
        """
        make(std::string const & sync_key, std::string const & packet_key, int length_field_size, int max_packet_size, gr::endianness_t endianness, bool use_golay) -> varlen_packet_tagger_sptr



        Params: (sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay)
        """
        return _satellites_swig.varlen_packet_tagger_make(sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_varlen_packet_tagger
    __del__ = lambda self: None
varlen_packet_tagger_swigregister = _satellites_swig.varlen_packet_tagger_swigregister
varlen_packet_tagger_swigregister(varlen_packet_tagger)

def varlen_packet_tagger_make(sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay):
    """
    varlen_packet_tagger_make(std::string const & sync_key, std::string const & packet_key, int length_field_size, int max_packet_size, gr::endianness_t endianness, bool use_golay) -> varlen_packet_tagger_sptr



    Params: (sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay)
    """
    return _satellites_swig.varlen_packet_tagger_make(sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay)

class varlen_packet_tagger_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::varlen_packet_tagger)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::varlen_packet_tagger)> self) -> varlen_packet_tagger_sptr
        __init__(boost::shared_ptr<(gr::satellites::varlen_packet_tagger)> self, varlen_packet_tagger p) -> varlen_packet_tagger_sptr
        """
        this = _satellites_swig.new_varlen_packet_tagger_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(varlen_packet_tagger_sptr self) -> varlen_packet_tagger"""
        return _satellites_swig.varlen_packet_tagger_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_varlen_packet_tagger_sptr
    __del__ = lambda self: None

    def make(self, sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay):
        """
        make(varlen_packet_tagger_sptr self, std::string const & sync_key, std::string const & packet_key, int length_field_size, int max_packet_size, gr::endianness_t endianness, bool use_golay) -> varlen_packet_tagger_sptr



        Params: (sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay)
        """
        return _satellites_swig.varlen_packet_tagger_sptr_make(self, sync_key, packet_key, length_field_size, max_packet_size, endianness, use_golay)


    def history(self):
        """history(varlen_packet_tagger_sptr self) -> unsigned int"""
        return _satellites_swig.varlen_packet_tagger_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(varlen_packet_tagger_sptr self, int which, int delay)
        declare_sample_delay(varlen_packet_tagger_sptr self, unsigned int delay)
        """
        return _satellites_swig.varlen_packet_tagger_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(varlen_packet_tagger_sptr self, int which) -> unsigned int"""
        return _satellites_swig.varlen_packet_tagger_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(varlen_packet_tagger_sptr self) -> int"""
        return _satellites_swig.varlen_packet_tagger_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(varlen_packet_tagger_sptr self) -> double"""
        return _satellites_swig.varlen_packet_tagger_sptr_relative_rate(self)


    def start(self):
        """start(varlen_packet_tagger_sptr self) -> bool"""
        return _satellites_swig.varlen_packet_tagger_sptr_start(self)


    def stop(self):
        """stop(varlen_packet_tagger_sptr self) -> bool"""
        return _satellites_swig.varlen_packet_tagger_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(varlen_packet_tagger_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.varlen_packet_tagger_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(varlen_packet_tagger_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.varlen_packet_tagger_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(varlen_packet_tagger_sptr self) -> int"""
        return _satellites_swig.varlen_packet_tagger_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(varlen_packet_tagger_sptr self, int m)"""
        return _satellites_swig.varlen_packet_tagger_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(varlen_packet_tagger_sptr self)"""
        return _satellites_swig.varlen_packet_tagger_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(varlen_packet_tagger_sptr self) -> bool"""
        return _satellites_swig.varlen_packet_tagger_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(varlen_packet_tagger_sptr self, int m)"""
        return _satellites_swig.varlen_packet_tagger_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(varlen_packet_tagger_sptr self) -> int"""
        return _satellites_swig.varlen_packet_tagger_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(varlen_packet_tagger_sptr self, int i) -> long"""
        return _satellites_swig.varlen_packet_tagger_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(varlen_packet_tagger_sptr self, long max_output_buffer)
        set_max_output_buffer(varlen_packet_tagger_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.varlen_packet_tagger_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(varlen_packet_tagger_sptr self, int i) -> long"""
        return _satellites_swig.varlen_packet_tagger_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(varlen_packet_tagger_sptr self, long min_output_buffer)
        set_min_output_buffer(varlen_packet_tagger_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.varlen_packet_tagger_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(varlen_packet_tagger_sptr self, int which) -> float
        pc_input_buffers_full(varlen_packet_tagger_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_tagger_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(varlen_packet_tagger_sptr self, int which) -> float
        pc_input_buffers_full_avg(varlen_packet_tagger_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_tagger_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(varlen_packet_tagger_sptr self, int which) -> float
        pc_input_buffers_full_var(varlen_packet_tagger_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_tagger_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(varlen_packet_tagger_sptr self, int which) -> float
        pc_output_buffers_full(varlen_packet_tagger_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_tagger_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(varlen_packet_tagger_sptr self, int which) -> float
        pc_output_buffers_full_avg(varlen_packet_tagger_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_tagger_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(varlen_packet_tagger_sptr self, int which) -> float
        pc_output_buffers_full_var(varlen_packet_tagger_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_tagger_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(varlen_packet_tagger_sptr self) -> float"""
        return _satellites_swig.varlen_packet_tagger_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(varlen_packet_tagger_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.varlen_packet_tagger_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(varlen_packet_tagger_sptr self)"""
        return _satellites_swig.varlen_packet_tagger_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(varlen_packet_tagger_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.varlen_packet_tagger_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(varlen_packet_tagger_sptr self) -> int"""
        return _satellites_swig.varlen_packet_tagger_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(varlen_packet_tagger_sptr self) -> int"""
        return _satellites_swig.varlen_packet_tagger_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(varlen_packet_tagger_sptr self, int priority) -> int"""
        return _satellites_swig.varlen_packet_tagger_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(varlen_packet_tagger_sptr self) -> std::string"""
        return _satellites_swig.varlen_packet_tagger_sptr_name(self)


    def symbol_name(self):
        """symbol_name(varlen_packet_tagger_sptr self) -> std::string"""
        return _satellites_swig.varlen_packet_tagger_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(varlen_packet_tagger_sptr self) -> io_signature_sptr"""
        return _satellites_swig.varlen_packet_tagger_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(varlen_packet_tagger_sptr self) -> io_signature_sptr"""
        return _satellites_swig.varlen_packet_tagger_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(varlen_packet_tagger_sptr self) -> long"""
        return _satellites_swig.varlen_packet_tagger_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(varlen_packet_tagger_sptr self) -> basic_block_sptr"""
        return _satellites_swig.varlen_packet_tagger_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(varlen_packet_tagger_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.varlen_packet_tagger_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(varlen_packet_tagger_sptr self) -> std::string"""
        return _satellites_swig.varlen_packet_tagger_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(varlen_packet_tagger_sptr self, std::string name)"""
        return _satellites_swig.varlen_packet_tagger_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(varlen_packet_tagger_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.varlen_packet_tagger_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(varlen_packet_tagger_sptr self) -> swig_int_ptr"""
        return _satellites_swig.varlen_packet_tagger_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(varlen_packet_tagger_sptr self) -> swig_int_ptr"""
        return _satellites_swig.varlen_packet_tagger_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(varlen_packet_tagger_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.varlen_packet_tagger_sptr_message_subscribers(self, which_port)

varlen_packet_tagger_sptr_swigregister = _satellites_swig.varlen_packet_tagger_sptr_swigregister
varlen_packet_tagger_sptr_swigregister(varlen_packet_tagger_sptr)


varlen_packet_tagger_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
varlen_packet_tagger = varlen_packet_tagger.make;

class varlen_packet_framer(object):
    """
    insert a packet length field into a tagged stream

    input: stream of bits (unpacked bytes) with packet_len tags output: a tagged stream of bits containing field length + packet bits

    This block prepends a packet length field into a tagged stream.
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(packet_key, length_field_size, endianness, use_golay, sync_word):
        """
        make(std::string const & packet_key, int length_field_size, gr::endianness_t endianness, bool use_golay, std::vector< uint8_t,std::allocator< uint8_t > > const sync_word) -> varlen_packet_framer_sptr



        Params: (packet_key, length_field_size, endianness, use_golay, sync_word)
        """
        return _satellites_swig.varlen_packet_framer_make(packet_key, length_field_size, endianness, use_golay, sync_word)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_varlen_packet_framer
    __del__ = lambda self: None
varlen_packet_framer_swigregister = _satellites_swig.varlen_packet_framer_swigregister
varlen_packet_framer_swigregister(varlen_packet_framer)

def varlen_packet_framer_make(packet_key, length_field_size, endianness, use_golay, sync_word):
    """
    varlen_packet_framer_make(std::string const & packet_key, int length_field_size, gr::endianness_t endianness, bool use_golay, std::vector< uint8_t,std::allocator< uint8_t > > const sync_word) -> varlen_packet_framer_sptr



    Params: (packet_key, length_field_size, endianness, use_golay, sync_word)
    """
    return _satellites_swig.varlen_packet_framer_make(packet_key, length_field_size, endianness, use_golay, sync_word)

class varlen_packet_framer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::varlen_packet_framer)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::varlen_packet_framer)> self) -> varlen_packet_framer_sptr
        __init__(boost::shared_ptr<(gr::satellites::varlen_packet_framer)> self, varlen_packet_framer p) -> varlen_packet_framer_sptr
        """
        this = _satellites_swig.new_varlen_packet_framer_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(varlen_packet_framer_sptr self) -> varlen_packet_framer"""
        return _satellites_swig.varlen_packet_framer_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_varlen_packet_framer_sptr
    __del__ = lambda self: None

    def make(self, packet_key, length_field_size, endianness, use_golay, sync_word):
        """
        make(varlen_packet_framer_sptr self, std::string const & packet_key, int length_field_size, gr::endianness_t endianness, bool use_golay, std::vector< uint8_t,std::allocator< uint8_t > > const sync_word) -> varlen_packet_framer_sptr



        Params: (packet_key, length_field_size, endianness, use_golay, sync_word)
        """
        return _satellites_swig.varlen_packet_framer_sptr_make(self, packet_key, length_field_size, endianness, use_golay, sync_word)


    def history(self):
        """history(varlen_packet_framer_sptr self) -> unsigned int"""
        return _satellites_swig.varlen_packet_framer_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(varlen_packet_framer_sptr self, int which, int delay)
        declare_sample_delay(varlen_packet_framer_sptr self, unsigned int delay)
        """
        return _satellites_swig.varlen_packet_framer_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(varlen_packet_framer_sptr self, int which) -> unsigned int"""
        return _satellites_swig.varlen_packet_framer_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(varlen_packet_framer_sptr self) -> int"""
        return _satellites_swig.varlen_packet_framer_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(varlen_packet_framer_sptr self) -> double"""
        return _satellites_swig.varlen_packet_framer_sptr_relative_rate(self)


    def start(self):
        """start(varlen_packet_framer_sptr self) -> bool"""
        return _satellites_swig.varlen_packet_framer_sptr_start(self)


    def stop(self):
        """stop(varlen_packet_framer_sptr self) -> bool"""
        return _satellites_swig.varlen_packet_framer_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(varlen_packet_framer_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.varlen_packet_framer_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(varlen_packet_framer_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.varlen_packet_framer_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(varlen_packet_framer_sptr self) -> int"""
        return _satellites_swig.varlen_packet_framer_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(varlen_packet_framer_sptr self, int m)"""
        return _satellites_swig.varlen_packet_framer_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(varlen_packet_framer_sptr self)"""
        return _satellites_swig.varlen_packet_framer_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(varlen_packet_framer_sptr self) -> bool"""
        return _satellites_swig.varlen_packet_framer_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(varlen_packet_framer_sptr self, int m)"""
        return _satellites_swig.varlen_packet_framer_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(varlen_packet_framer_sptr self) -> int"""
        return _satellites_swig.varlen_packet_framer_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(varlen_packet_framer_sptr self, int i) -> long"""
        return _satellites_swig.varlen_packet_framer_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(varlen_packet_framer_sptr self, long max_output_buffer)
        set_max_output_buffer(varlen_packet_framer_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.varlen_packet_framer_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(varlen_packet_framer_sptr self, int i) -> long"""
        return _satellites_swig.varlen_packet_framer_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(varlen_packet_framer_sptr self, long min_output_buffer)
        set_min_output_buffer(varlen_packet_framer_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.varlen_packet_framer_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(varlen_packet_framer_sptr self, int which) -> float
        pc_input_buffers_full(varlen_packet_framer_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_framer_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(varlen_packet_framer_sptr self, int which) -> float
        pc_input_buffers_full_avg(varlen_packet_framer_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_framer_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(varlen_packet_framer_sptr self, int which) -> float
        pc_input_buffers_full_var(varlen_packet_framer_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_framer_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(varlen_packet_framer_sptr self, int which) -> float
        pc_output_buffers_full(varlen_packet_framer_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_framer_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(varlen_packet_framer_sptr self, int which) -> float
        pc_output_buffers_full_avg(varlen_packet_framer_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_framer_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(varlen_packet_framer_sptr self, int which) -> float
        pc_output_buffers_full_var(varlen_packet_framer_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.varlen_packet_framer_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(varlen_packet_framer_sptr self) -> float"""
        return _satellites_swig.varlen_packet_framer_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(varlen_packet_framer_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.varlen_packet_framer_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(varlen_packet_framer_sptr self)"""
        return _satellites_swig.varlen_packet_framer_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(varlen_packet_framer_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.varlen_packet_framer_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(varlen_packet_framer_sptr self) -> int"""
        return _satellites_swig.varlen_packet_framer_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(varlen_packet_framer_sptr self) -> int"""
        return _satellites_swig.varlen_packet_framer_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(varlen_packet_framer_sptr self, int priority) -> int"""
        return _satellites_swig.varlen_packet_framer_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(varlen_packet_framer_sptr self) -> std::string"""
        return _satellites_swig.varlen_packet_framer_sptr_name(self)


    def symbol_name(self):
        """symbol_name(varlen_packet_framer_sptr self) -> std::string"""
        return _satellites_swig.varlen_packet_framer_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(varlen_packet_framer_sptr self) -> io_signature_sptr"""
        return _satellites_swig.varlen_packet_framer_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(varlen_packet_framer_sptr self) -> io_signature_sptr"""
        return _satellites_swig.varlen_packet_framer_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(varlen_packet_framer_sptr self) -> long"""
        return _satellites_swig.varlen_packet_framer_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(varlen_packet_framer_sptr self) -> basic_block_sptr"""
        return _satellites_swig.varlen_packet_framer_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(varlen_packet_framer_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.varlen_packet_framer_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(varlen_packet_framer_sptr self) -> std::string"""
        return _satellites_swig.varlen_packet_framer_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(varlen_packet_framer_sptr self, std::string name)"""
        return _satellites_swig.varlen_packet_framer_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(varlen_packet_framer_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.varlen_packet_framer_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(varlen_packet_framer_sptr self) -> swig_int_ptr"""
        return _satellites_swig.varlen_packet_framer_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(varlen_packet_framer_sptr self) -> swig_int_ptr"""
        return _satellites_swig.varlen_packet_framer_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(varlen_packet_framer_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.varlen_packet_framer_sptr_message_subscribers(self, which_port)

varlen_packet_framer_sptr_swigregister = _satellites_swig.varlen_packet_framer_sptr_swigregister
varlen_packet_framer_sptr_swigregister(varlen_packet_framer_sptr)


varlen_packet_framer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
varlen_packet_framer = varlen_packet_framer.make;

class nusat_decoder(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """
        make() -> nusat_decoder_sptr

        Return a shared_ptr to a new instance of satellites::nusat_decoder.

        To avoid accidental use of raw pointers, satellites::nusat_decoder's constructor is in a private implementation class. satellites::nusat_decoder::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.nusat_decoder_make()

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_nusat_decoder
    __del__ = lambda self: None
nusat_decoder_swigregister = _satellites_swig.nusat_decoder_swigregister
nusat_decoder_swigregister(nusat_decoder)

def nusat_decoder_make():
    """
    nusat_decoder_make() -> nusat_decoder_sptr

    Return a shared_ptr to a new instance of satellites::nusat_decoder.

    To avoid accidental use of raw pointers, satellites::nusat_decoder's constructor is in a private implementation class. satellites::nusat_decoder::make is the public interface for creating new instances.

    Params: (NONE)
    """
    return _satellites_swig.nusat_decoder_make()

class nusat_decoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::nusat_decoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::nusat_decoder)> self) -> nusat_decoder_sptr
        __init__(boost::shared_ptr<(gr::satellites::nusat_decoder)> self, nusat_decoder p) -> nusat_decoder_sptr
        """
        this = _satellites_swig.new_nusat_decoder_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(nusat_decoder_sptr self) -> nusat_decoder"""
        return _satellites_swig.nusat_decoder_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_nusat_decoder_sptr
    __del__ = lambda self: None

    def make(self):
        """
        make(nusat_decoder_sptr self) -> nusat_decoder_sptr

        Return a shared_ptr to a new instance of satellites::nusat_decoder.

        To avoid accidental use of raw pointers, satellites::nusat_decoder's constructor is in a private implementation class. satellites::nusat_decoder::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.nusat_decoder_sptr_make(self)


    def history(self):
        """history(nusat_decoder_sptr self) -> unsigned int"""
        return _satellites_swig.nusat_decoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(nusat_decoder_sptr self, int which, int delay)
        declare_sample_delay(nusat_decoder_sptr self, unsigned int delay)
        """
        return _satellites_swig.nusat_decoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(nusat_decoder_sptr self, int which) -> unsigned int"""
        return _satellites_swig.nusat_decoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(nusat_decoder_sptr self) -> int"""
        return _satellites_swig.nusat_decoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(nusat_decoder_sptr self) -> double"""
        return _satellites_swig.nusat_decoder_sptr_relative_rate(self)


    def start(self):
        """start(nusat_decoder_sptr self) -> bool"""
        return _satellites_swig.nusat_decoder_sptr_start(self)


    def stop(self):
        """stop(nusat_decoder_sptr self) -> bool"""
        return _satellites_swig.nusat_decoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(nusat_decoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.nusat_decoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(nusat_decoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.nusat_decoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(nusat_decoder_sptr self) -> int"""
        return _satellites_swig.nusat_decoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(nusat_decoder_sptr self, int m)"""
        return _satellites_swig.nusat_decoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(nusat_decoder_sptr self)"""
        return _satellites_swig.nusat_decoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(nusat_decoder_sptr self) -> bool"""
        return _satellites_swig.nusat_decoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(nusat_decoder_sptr self, int m)"""
        return _satellites_swig.nusat_decoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(nusat_decoder_sptr self) -> int"""
        return _satellites_swig.nusat_decoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(nusat_decoder_sptr self, int i) -> long"""
        return _satellites_swig.nusat_decoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(nusat_decoder_sptr self, long max_output_buffer)
        set_max_output_buffer(nusat_decoder_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.nusat_decoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(nusat_decoder_sptr self, int i) -> long"""
        return _satellites_swig.nusat_decoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(nusat_decoder_sptr self, long min_output_buffer)
        set_min_output_buffer(nusat_decoder_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.nusat_decoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(nusat_decoder_sptr self, int which) -> float
        pc_input_buffers_full(nusat_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.nusat_decoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(nusat_decoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(nusat_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.nusat_decoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(nusat_decoder_sptr self, int which) -> float
        pc_input_buffers_full_var(nusat_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.nusat_decoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(nusat_decoder_sptr self, int which) -> float
        pc_output_buffers_full(nusat_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.nusat_decoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(nusat_decoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(nusat_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.nusat_decoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(nusat_decoder_sptr self, int which) -> float
        pc_output_buffers_full_var(nusat_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.nusat_decoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(nusat_decoder_sptr self) -> float"""
        return _satellites_swig.nusat_decoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(nusat_decoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.nusat_decoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(nusat_decoder_sptr self)"""
        return _satellites_swig.nusat_decoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(nusat_decoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.nusat_decoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(nusat_decoder_sptr self) -> int"""
        return _satellites_swig.nusat_decoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(nusat_decoder_sptr self) -> int"""
        return _satellites_swig.nusat_decoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(nusat_decoder_sptr self, int priority) -> int"""
        return _satellites_swig.nusat_decoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(nusat_decoder_sptr self) -> std::string"""
        return _satellites_swig.nusat_decoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(nusat_decoder_sptr self) -> std::string"""
        return _satellites_swig.nusat_decoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(nusat_decoder_sptr self) -> io_signature_sptr"""
        return _satellites_swig.nusat_decoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(nusat_decoder_sptr self) -> io_signature_sptr"""
        return _satellites_swig.nusat_decoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(nusat_decoder_sptr self) -> long"""
        return _satellites_swig.nusat_decoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(nusat_decoder_sptr self) -> basic_block_sptr"""
        return _satellites_swig.nusat_decoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(nusat_decoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.nusat_decoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(nusat_decoder_sptr self) -> std::string"""
        return _satellites_swig.nusat_decoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(nusat_decoder_sptr self, std::string name)"""
        return _satellites_swig.nusat_decoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(nusat_decoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.nusat_decoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(nusat_decoder_sptr self) -> swig_int_ptr"""
        return _satellites_swig.nusat_decoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(nusat_decoder_sptr self) -> swig_int_ptr"""
        return _satellites_swig.nusat_decoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(nusat_decoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.nusat_decoder_sptr_message_subscribers(self, which_port)

nusat_decoder_sptr_swigregister = _satellites_swig.nusat_decoder_sptr_swigregister
nusat_decoder_sptr_swigregister(nusat_decoder_sptr)


nusat_decoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
nusat_decoder = nusat_decoder.make;

class rscode_decoder(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(npar):
        """
        make(int npar) -> rscode_decoder_sptr

        Return a shared_ptr to a new instance of satellites::rscode_decoder.

        To avoid accidental use of raw pointers, satellites::rscode_decoder's constructor is in a private implementation class. satellites::rscode_decoder::make is the public interface for creating new instances.

        Params: (npar)
        """
        return _satellites_swig.rscode_decoder_make(npar)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_rscode_decoder
    __del__ = lambda self: None
rscode_decoder_swigregister = _satellites_swig.rscode_decoder_swigregister
rscode_decoder_swigregister(rscode_decoder)

def rscode_decoder_make(npar):
    """
    rscode_decoder_make(int npar) -> rscode_decoder_sptr

    Return a shared_ptr to a new instance of satellites::rscode_decoder.

    To avoid accidental use of raw pointers, satellites::rscode_decoder's constructor is in a private implementation class. satellites::rscode_decoder::make is the public interface for creating new instances.

    Params: (npar)
    """
    return _satellites_swig.rscode_decoder_make(npar)

class rscode_decoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::rscode_decoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::rscode_decoder)> self) -> rscode_decoder_sptr
        __init__(boost::shared_ptr<(gr::satellites::rscode_decoder)> self, rscode_decoder p) -> rscode_decoder_sptr
        """
        this = _satellites_swig.new_rscode_decoder_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(rscode_decoder_sptr self) -> rscode_decoder"""
        return _satellites_swig.rscode_decoder_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_rscode_decoder_sptr
    __del__ = lambda self: None

    def make(self, npar):
        """
        make(rscode_decoder_sptr self, int npar) -> rscode_decoder_sptr

        Return a shared_ptr to a new instance of satellites::rscode_decoder.

        To avoid accidental use of raw pointers, satellites::rscode_decoder's constructor is in a private implementation class. satellites::rscode_decoder::make is the public interface for creating new instances.

        Params: (npar)
        """
        return _satellites_swig.rscode_decoder_sptr_make(self, npar)


    def history(self):
        """history(rscode_decoder_sptr self) -> unsigned int"""
        return _satellites_swig.rscode_decoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(rscode_decoder_sptr self, int which, int delay)
        declare_sample_delay(rscode_decoder_sptr self, unsigned int delay)
        """
        return _satellites_swig.rscode_decoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(rscode_decoder_sptr self, int which) -> unsigned int"""
        return _satellites_swig.rscode_decoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(rscode_decoder_sptr self) -> int"""
        return _satellites_swig.rscode_decoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(rscode_decoder_sptr self) -> double"""
        return _satellites_swig.rscode_decoder_sptr_relative_rate(self)


    def start(self):
        """start(rscode_decoder_sptr self) -> bool"""
        return _satellites_swig.rscode_decoder_sptr_start(self)


    def stop(self):
        """stop(rscode_decoder_sptr self) -> bool"""
        return _satellites_swig.rscode_decoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(rscode_decoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.rscode_decoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(rscode_decoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.rscode_decoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(rscode_decoder_sptr self) -> int"""
        return _satellites_swig.rscode_decoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(rscode_decoder_sptr self, int m)"""
        return _satellites_swig.rscode_decoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(rscode_decoder_sptr self)"""
        return _satellites_swig.rscode_decoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(rscode_decoder_sptr self) -> bool"""
        return _satellites_swig.rscode_decoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(rscode_decoder_sptr self, int m)"""
        return _satellites_swig.rscode_decoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(rscode_decoder_sptr self) -> int"""
        return _satellites_swig.rscode_decoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(rscode_decoder_sptr self, int i) -> long"""
        return _satellites_swig.rscode_decoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(rscode_decoder_sptr self, long max_output_buffer)
        set_max_output_buffer(rscode_decoder_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.rscode_decoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(rscode_decoder_sptr self, int i) -> long"""
        return _satellites_swig.rscode_decoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(rscode_decoder_sptr self, long min_output_buffer)
        set_min_output_buffer(rscode_decoder_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.rscode_decoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(rscode_decoder_sptr self, int which) -> float
        pc_input_buffers_full(rscode_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.rscode_decoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(rscode_decoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(rscode_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.rscode_decoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(rscode_decoder_sptr self, int which) -> float
        pc_input_buffers_full_var(rscode_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.rscode_decoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(rscode_decoder_sptr self, int which) -> float
        pc_output_buffers_full(rscode_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.rscode_decoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(rscode_decoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(rscode_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.rscode_decoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(rscode_decoder_sptr self, int which) -> float
        pc_output_buffers_full_var(rscode_decoder_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.rscode_decoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(rscode_decoder_sptr self) -> float"""
        return _satellites_swig.rscode_decoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(rscode_decoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.rscode_decoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(rscode_decoder_sptr self)"""
        return _satellites_swig.rscode_decoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(rscode_decoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.rscode_decoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(rscode_decoder_sptr self) -> int"""
        return _satellites_swig.rscode_decoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(rscode_decoder_sptr self) -> int"""
        return _satellites_swig.rscode_decoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(rscode_decoder_sptr self, int priority) -> int"""
        return _satellites_swig.rscode_decoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(rscode_decoder_sptr self) -> std::string"""
        return _satellites_swig.rscode_decoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(rscode_decoder_sptr self) -> std::string"""
        return _satellites_swig.rscode_decoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(rscode_decoder_sptr self) -> io_signature_sptr"""
        return _satellites_swig.rscode_decoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(rscode_decoder_sptr self) -> io_signature_sptr"""
        return _satellites_swig.rscode_decoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(rscode_decoder_sptr self) -> long"""
        return _satellites_swig.rscode_decoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(rscode_decoder_sptr self) -> basic_block_sptr"""
        return _satellites_swig.rscode_decoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(rscode_decoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.rscode_decoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(rscode_decoder_sptr self) -> std::string"""
        return _satellites_swig.rscode_decoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(rscode_decoder_sptr self, std::string name)"""
        return _satellites_swig.rscode_decoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(rscode_decoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.rscode_decoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(rscode_decoder_sptr self) -> swig_int_ptr"""
        return _satellites_swig.rscode_decoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(rscode_decoder_sptr self) -> swig_int_ptr"""
        return _satellites_swig.rscode_decoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(rscode_decoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.rscode_decoder_sptr_message_subscribers(self, which_port)

rscode_decoder_sptr_swigregister = _satellites_swig.rscode_decoder_sptr_swigregister
rscode_decoder_sptr_swigregister(rscode_decoder_sptr)


rscode_decoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
rscode_decoder = rscode_decoder.make;

class ao40_syncframe_soft(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(threshold):
        """
        make(int threshold) -> ao40_syncframe_soft_sptr

        Return a shared_ptr to a new instance of satellites::syncframe_soft.

        To avoid accidental use of raw pointers, satellites::syncframe_soft's constructor is in a private implementation class. satellites::syncframe_soft::make is the public interface for creating new instances.

        Params: (threshold)
        """
        return _satellites_swig.ao40_syncframe_soft_make(threshold)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_ao40_syncframe_soft
    __del__ = lambda self: None
ao40_syncframe_soft_swigregister = _satellites_swig.ao40_syncframe_soft_swigregister
ao40_syncframe_soft_swigregister(ao40_syncframe_soft)

def ao40_syncframe_soft_make(threshold):
    """
    ao40_syncframe_soft_make(int threshold) -> ao40_syncframe_soft_sptr

    Return a shared_ptr to a new instance of satellites::syncframe_soft.

    To avoid accidental use of raw pointers, satellites::syncframe_soft's constructor is in a private implementation class. satellites::syncframe_soft::make is the public interface for creating new instances.

    Params: (threshold)
    """
    return _satellites_swig.ao40_syncframe_soft_make(threshold)

class ao40_syncframe_soft_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::ao40_syncframe_soft)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::ao40_syncframe_soft)> self) -> ao40_syncframe_soft_sptr
        __init__(boost::shared_ptr<(gr::satellites::ao40_syncframe_soft)> self, ao40_syncframe_soft p) -> ao40_syncframe_soft_sptr
        """
        this = _satellites_swig.new_ao40_syncframe_soft_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ao40_syncframe_soft_sptr self) -> ao40_syncframe_soft"""
        return _satellites_swig.ao40_syncframe_soft_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_ao40_syncframe_soft_sptr
    __del__ = lambda self: None

    def make(self, threshold):
        """
        make(ao40_syncframe_soft_sptr self, int threshold) -> ao40_syncframe_soft_sptr

        Return a shared_ptr to a new instance of satellites::syncframe_soft.

        To avoid accidental use of raw pointers, satellites::syncframe_soft's constructor is in a private implementation class. satellites::syncframe_soft::make is the public interface for creating new instances.

        Params: (threshold)
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_make(self, threshold)


    def history(self):
        """history(ao40_syncframe_soft_sptr self) -> unsigned int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ao40_syncframe_soft_sptr self, int which, int delay)
        declare_sample_delay(ao40_syncframe_soft_sptr self, unsigned int delay)
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ao40_syncframe_soft_sptr self, int which) -> unsigned int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ao40_syncframe_soft_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ao40_syncframe_soft_sptr self) -> double"""
        return _satellites_swig.ao40_syncframe_soft_sptr_relative_rate(self)


    def start(self):
        """start(ao40_syncframe_soft_sptr self) -> bool"""
        return _satellites_swig.ao40_syncframe_soft_sptr_start(self)


    def stop(self):
        """stop(ao40_syncframe_soft_sptr self) -> bool"""
        return _satellites_swig.ao40_syncframe_soft_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ao40_syncframe_soft_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.ao40_syncframe_soft_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ao40_syncframe_soft_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.ao40_syncframe_soft_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ao40_syncframe_soft_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ao40_syncframe_soft_sptr self, int m)"""
        return _satellites_swig.ao40_syncframe_soft_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ao40_syncframe_soft_sptr self)"""
        return _satellites_swig.ao40_syncframe_soft_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ao40_syncframe_soft_sptr self) -> bool"""
        return _satellites_swig.ao40_syncframe_soft_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ao40_syncframe_soft_sptr self, int m)"""
        return _satellites_swig.ao40_syncframe_soft_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ao40_syncframe_soft_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ao40_syncframe_soft_sptr self, int i) -> long"""
        return _satellites_swig.ao40_syncframe_soft_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ao40_syncframe_soft_sptr self, long max_output_buffer)
        set_max_output_buffer(ao40_syncframe_soft_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ao40_syncframe_soft_sptr self, int i) -> long"""
        return _satellites_swig.ao40_syncframe_soft_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ao40_syncframe_soft_sptr self, long min_output_buffer)
        set_min_output_buffer(ao40_syncframe_soft_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ao40_syncframe_soft_sptr self, int which) -> float
        pc_input_buffers_full(ao40_syncframe_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ao40_syncframe_soft_sptr self, int which) -> float
        pc_input_buffers_full_avg(ao40_syncframe_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ao40_syncframe_soft_sptr self, int which) -> float
        pc_input_buffers_full_var(ao40_syncframe_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ao40_syncframe_soft_sptr self, int which) -> float
        pc_output_buffers_full(ao40_syncframe_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ao40_syncframe_soft_sptr self, int which) -> float
        pc_output_buffers_full_avg(ao40_syncframe_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ao40_syncframe_soft_sptr self, int which) -> float
        pc_output_buffers_full_var(ao40_syncframe_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ao40_syncframe_soft_sptr self) -> float"""
        return _satellites_swig.ao40_syncframe_soft_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ao40_syncframe_soft_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.ao40_syncframe_soft_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ao40_syncframe_soft_sptr self)"""
        return _satellites_swig.ao40_syncframe_soft_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ao40_syncframe_soft_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.ao40_syncframe_soft_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ao40_syncframe_soft_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ao40_syncframe_soft_sptr self) -> int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ao40_syncframe_soft_sptr self, int priority) -> int"""
        return _satellites_swig.ao40_syncframe_soft_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ao40_syncframe_soft_sptr self) -> std::string"""
        return _satellites_swig.ao40_syncframe_soft_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ao40_syncframe_soft_sptr self) -> std::string"""
        return _satellites_swig.ao40_syncframe_soft_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ao40_syncframe_soft_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_syncframe_soft_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ao40_syncframe_soft_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_syncframe_soft_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ao40_syncframe_soft_sptr self) -> long"""
        return _satellites_swig.ao40_syncframe_soft_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ao40_syncframe_soft_sptr self) -> basic_block_sptr"""
        return _satellites_swig.ao40_syncframe_soft_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ao40_syncframe_soft_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.ao40_syncframe_soft_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ao40_syncframe_soft_sptr self) -> std::string"""
        return _satellites_swig.ao40_syncframe_soft_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ao40_syncframe_soft_sptr self, std::string name)"""
        return _satellites_swig.ao40_syncframe_soft_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ao40_syncframe_soft_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.ao40_syncframe_soft_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ao40_syncframe_soft_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_syncframe_soft_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ao40_syncframe_soft_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_syncframe_soft_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ao40_syncframe_soft_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.ao40_syncframe_soft_sptr_message_subscribers(self, which_port)

ao40_syncframe_soft_sptr_swigregister = _satellites_swig.ao40_syncframe_soft_sptr_swigregister
ao40_syncframe_soft_sptr_swigregister(ao40_syncframe_soft_sptr)


ao40_syncframe_soft_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ao40_syncframe_soft = ao40_syncframe_soft.make;

class ao40_deinterleaver_soft(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """
        make() -> ao40_deinterleaver_soft_sptr

        Return a shared_ptr to a new instance of satellites::ao40_deinterleaver_soft.

        To avoid accidental use of raw pointers, satellites::ao40_deinterleaver_soft's constructor is in a private implementation class. satellites::ao40_deinterleaver_soft::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.ao40_deinterleaver_soft_make()

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_ao40_deinterleaver_soft
    __del__ = lambda self: None
ao40_deinterleaver_soft_swigregister = _satellites_swig.ao40_deinterleaver_soft_swigregister
ao40_deinterleaver_soft_swigregister(ao40_deinterleaver_soft)

def ao40_deinterleaver_soft_make():
    """
    ao40_deinterleaver_soft_make() -> ao40_deinterleaver_soft_sptr

    Return a shared_ptr to a new instance of satellites::ao40_deinterleaver_soft.

    To avoid accidental use of raw pointers, satellites::ao40_deinterleaver_soft's constructor is in a private implementation class. satellites::ao40_deinterleaver_soft::make is the public interface for creating new instances.

    Params: (NONE)
    """
    return _satellites_swig.ao40_deinterleaver_soft_make()

class ao40_deinterleaver_soft_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::ao40_deinterleaver_soft)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::ao40_deinterleaver_soft)> self) -> ao40_deinterleaver_soft_sptr
        __init__(boost::shared_ptr<(gr::satellites::ao40_deinterleaver_soft)> self, ao40_deinterleaver_soft p) -> ao40_deinterleaver_soft_sptr
        """
        this = _satellites_swig.new_ao40_deinterleaver_soft_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ao40_deinterleaver_soft_sptr self) -> ao40_deinterleaver_soft"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_ao40_deinterleaver_soft_sptr
    __del__ = lambda self: None

    def make(self):
        """
        make(ao40_deinterleaver_soft_sptr self) -> ao40_deinterleaver_soft_sptr

        Return a shared_ptr to a new instance of satellites::ao40_deinterleaver_soft.

        To avoid accidental use of raw pointers, satellites::ao40_deinterleaver_soft's constructor is in a private implementation class. satellites::ao40_deinterleaver_soft::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_make(self)


    def history(self):
        """history(ao40_deinterleaver_soft_sptr self) -> unsigned int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ao40_deinterleaver_soft_sptr self, int which, int delay)
        declare_sample_delay(ao40_deinterleaver_soft_sptr self, unsigned int delay)
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ao40_deinterleaver_soft_sptr self, int which) -> unsigned int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ao40_deinterleaver_soft_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ao40_deinterleaver_soft_sptr self) -> double"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_relative_rate(self)


    def start(self):
        """start(ao40_deinterleaver_soft_sptr self) -> bool"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_start(self)


    def stop(self):
        """stop(ao40_deinterleaver_soft_sptr self) -> bool"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ao40_deinterleaver_soft_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ao40_deinterleaver_soft_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ao40_deinterleaver_soft_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ao40_deinterleaver_soft_sptr self, int m)"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ao40_deinterleaver_soft_sptr self)"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ao40_deinterleaver_soft_sptr self) -> bool"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ao40_deinterleaver_soft_sptr self, int m)"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ao40_deinterleaver_soft_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ao40_deinterleaver_soft_sptr self, int i) -> long"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ao40_deinterleaver_soft_sptr self, long max_output_buffer)
        set_max_output_buffer(ao40_deinterleaver_soft_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ao40_deinterleaver_soft_sptr self, int i) -> long"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ao40_deinterleaver_soft_sptr self, long min_output_buffer)
        set_min_output_buffer(ao40_deinterleaver_soft_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ao40_deinterleaver_soft_sptr self, int which) -> float
        pc_input_buffers_full(ao40_deinterleaver_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ao40_deinterleaver_soft_sptr self, int which) -> float
        pc_input_buffers_full_avg(ao40_deinterleaver_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ao40_deinterleaver_soft_sptr self, int which) -> float
        pc_input_buffers_full_var(ao40_deinterleaver_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ao40_deinterleaver_soft_sptr self, int which) -> float
        pc_output_buffers_full(ao40_deinterleaver_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ao40_deinterleaver_soft_sptr self, int which) -> float
        pc_output_buffers_full_avg(ao40_deinterleaver_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ao40_deinterleaver_soft_sptr self, int which) -> float
        pc_output_buffers_full_var(ao40_deinterleaver_soft_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ao40_deinterleaver_soft_sptr self) -> float"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ao40_deinterleaver_soft_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ao40_deinterleaver_soft_sptr self)"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ao40_deinterleaver_soft_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ao40_deinterleaver_soft_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ao40_deinterleaver_soft_sptr self) -> int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ao40_deinterleaver_soft_sptr self, int priority) -> int"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ao40_deinterleaver_soft_sptr self) -> std::string"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ao40_deinterleaver_soft_sptr self) -> std::string"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ao40_deinterleaver_soft_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ao40_deinterleaver_soft_sptr self) -> io_signature_sptr"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ao40_deinterleaver_soft_sptr self) -> long"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ao40_deinterleaver_soft_sptr self) -> basic_block_sptr"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ao40_deinterleaver_soft_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ao40_deinterleaver_soft_sptr self) -> std::string"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ao40_deinterleaver_soft_sptr self, std::string name)"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ao40_deinterleaver_soft_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ao40_deinterleaver_soft_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ao40_deinterleaver_soft_sptr self) -> swig_int_ptr"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ao40_deinterleaver_soft_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.ao40_deinterleaver_soft_sptr_message_subscribers(self, which_port)

ao40_deinterleaver_soft_sptr_swigregister = _satellites_swig.ao40_deinterleaver_soft_sptr_swigregister
ao40_deinterleaver_soft_sptr_swigregister(ao40_deinterleaver_soft_sptr)


ao40_deinterleaver_soft_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ao40_deinterleaver_soft = ao40_deinterleaver_soft.make;

class descrambler308(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """
        make() -> descrambler308_sptr

        Return a shared_ptr to a new instance of satellites::descrambler308.

        To avoid accidental use of raw pointers, satellites::descrambler308's constructor is in a private implementation class. satellites::descrambler308::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.descrambler308_make()

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_descrambler308
    __del__ = lambda self: None
descrambler308_swigregister = _satellites_swig.descrambler308_swigregister
descrambler308_swigregister(descrambler308)

def descrambler308_make():
    """
    descrambler308_make() -> descrambler308_sptr

    Return a shared_ptr to a new instance of satellites::descrambler308.

    To avoid accidental use of raw pointers, satellites::descrambler308's constructor is in a private implementation class. satellites::descrambler308::make is the public interface for creating new instances.

    Params: (NONE)
    """
    return _satellites_swig.descrambler308_make()

class descrambler308_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::descrambler308)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::descrambler308)> self) -> descrambler308_sptr
        __init__(boost::shared_ptr<(gr::satellites::descrambler308)> self, descrambler308 p) -> descrambler308_sptr
        """
        this = _satellites_swig.new_descrambler308_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(descrambler308_sptr self) -> descrambler308"""
        return _satellites_swig.descrambler308_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_descrambler308_sptr
    __del__ = lambda self: None

    def make(self):
        """
        make(descrambler308_sptr self) -> descrambler308_sptr

        Return a shared_ptr to a new instance of satellites::descrambler308.

        To avoid accidental use of raw pointers, satellites::descrambler308's constructor is in a private implementation class. satellites::descrambler308::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _satellites_swig.descrambler308_sptr_make(self)


    def history(self):
        """history(descrambler308_sptr self) -> unsigned int"""
        return _satellites_swig.descrambler308_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(descrambler308_sptr self, int which, int delay)
        declare_sample_delay(descrambler308_sptr self, unsigned int delay)
        """
        return _satellites_swig.descrambler308_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(descrambler308_sptr self, int which) -> unsigned int"""
        return _satellites_swig.descrambler308_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(descrambler308_sptr self) -> int"""
        return _satellites_swig.descrambler308_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(descrambler308_sptr self) -> double"""
        return _satellites_swig.descrambler308_sptr_relative_rate(self)


    def start(self):
        """start(descrambler308_sptr self) -> bool"""
        return _satellites_swig.descrambler308_sptr_start(self)


    def stop(self):
        """stop(descrambler308_sptr self) -> bool"""
        return _satellites_swig.descrambler308_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(descrambler308_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.descrambler308_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(descrambler308_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.descrambler308_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(descrambler308_sptr self) -> int"""
        return _satellites_swig.descrambler308_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(descrambler308_sptr self, int m)"""
        return _satellites_swig.descrambler308_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(descrambler308_sptr self)"""
        return _satellites_swig.descrambler308_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(descrambler308_sptr self) -> bool"""
        return _satellites_swig.descrambler308_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(descrambler308_sptr self, int m)"""
        return _satellites_swig.descrambler308_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(descrambler308_sptr self) -> int"""
        return _satellites_swig.descrambler308_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(descrambler308_sptr self, int i) -> long"""
        return _satellites_swig.descrambler308_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(descrambler308_sptr self, long max_output_buffer)
        set_max_output_buffer(descrambler308_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.descrambler308_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(descrambler308_sptr self, int i) -> long"""
        return _satellites_swig.descrambler308_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(descrambler308_sptr self, long min_output_buffer)
        set_min_output_buffer(descrambler308_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.descrambler308_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(descrambler308_sptr self, int which) -> float
        pc_input_buffers_full(descrambler308_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.descrambler308_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(descrambler308_sptr self, int which) -> float
        pc_input_buffers_full_avg(descrambler308_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.descrambler308_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(descrambler308_sptr self, int which) -> float
        pc_input_buffers_full_var(descrambler308_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.descrambler308_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(descrambler308_sptr self, int which) -> float
        pc_output_buffers_full(descrambler308_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.descrambler308_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(descrambler308_sptr self, int which) -> float
        pc_output_buffers_full_avg(descrambler308_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.descrambler308_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(descrambler308_sptr self, int which) -> float
        pc_output_buffers_full_var(descrambler308_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.descrambler308_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(descrambler308_sptr self) -> float"""
        return _satellites_swig.descrambler308_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(descrambler308_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.descrambler308_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(descrambler308_sptr self)"""
        return _satellites_swig.descrambler308_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(descrambler308_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.descrambler308_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(descrambler308_sptr self) -> int"""
        return _satellites_swig.descrambler308_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(descrambler308_sptr self) -> int"""
        return _satellites_swig.descrambler308_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(descrambler308_sptr self, int priority) -> int"""
        return _satellites_swig.descrambler308_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(descrambler308_sptr self) -> std::string"""
        return _satellites_swig.descrambler308_sptr_name(self)


    def symbol_name(self):
        """symbol_name(descrambler308_sptr self) -> std::string"""
        return _satellites_swig.descrambler308_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(descrambler308_sptr self) -> io_signature_sptr"""
        return _satellites_swig.descrambler308_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(descrambler308_sptr self) -> io_signature_sptr"""
        return _satellites_swig.descrambler308_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(descrambler308_sptr self) -> long"""
        return _satellites_swig.descrambler308_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(descrambler308_sptr self) -> basic_block_sptr"""
        return _satellites_swig.descrambler308_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(descrambler308_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.descrambler308_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(descrambler308_sptr self) -> std::string"""
        return _satellites_swig.descrambler308_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(descrambler308_sptr self, std::string name)"""
        return _satellites_swig.descrambler308_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(descrambler308_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.descrambler308_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(descrambler308_sptr self) -> swig_int_ptr"""
        return _satellites_swig.descrambler308_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(descrambler308_sptr self) -> swig_int_ptr"""
        return _satellites_swig.descrambler308_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(descrambler308_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.descrambler308_sptr_message_subscribers(self, which_port)

descrambler308_sptr_swigregister = _satellites_swig.descrambler308_sptr_swigregister
descrambler308_sptr_swigregister(descrambler308_sptr)


descrambler308_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
descrambler308 = descrambler308.make;

class decode_rs_general(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(gfpoly, fcr, prim, nroots, verbose):
        """
        make(int gfpoly, int fcr, int prim, int nroots, bool verbose) -> decode_rs_general_sptr

        Return a shared_ptr to a new instance of satellites::decode_rs_general.

        To avoid accidental use of raw pointers, satellites::decode_rs_general's constructor is in a private implementation class. satellites::decode_rs_general::make is the public interface for creating new instances.

        Params: (gfpoly, fcr, prim, nroots, verbose)
        """
        return _satellites_swig.decode_rs_general_make(gfpoly, fcr, prim, nroots, verbose)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_decode_rs_general
    __del__ = lambda self: None
decode_rs_general_swigregister = _satellites_swig.decode_rs_general_swigregister
decode_rs_general_swigregister(decode_rs_general)

def decode_rs_general_make(gfpoly, fcr, prim, nroots, verbose):
    """
    decode_rs_general_make(int gfpoly, int fcr, int prim, int nroots, bool verbose) -> decode_rs_general_sptr

    Return a shared_ptr to a new instance of satellites::decode_rs_general.

    To avoid accidental use of raw pointers, satellites::decode_rs_general's constructor is in a private implementation class. satellites::decode_rs_general::make is the public interface for creating new instances.

    Params: (gfpoly, fcr, prim, nroots, verbose)
    """
    return _satellites_swig.decode_rs_general_make(gfpoly, fcr, prim, nroots, verbose)

class decode_rs_general_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::decode_rs_general)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::decode_rs_general)> self) -> decode_rs_general_sptr
        __init__(boost::shared_ptr<(gr::satellites::decode_rs_general)> self, decode_rs_general p) -> decode_rs_general_sptr
        """
        this = _satellites_swig.new_decode_rs_general_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(decode_rs_general_sptr self) -> decode_rs_general"""
        return _satellites_swig.decode_rs_general_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_decode_rs_general_sptr
    __del__ = lambda self: None

    def make(self, gfpoly, fcr, prim, nroots, verbose):
        """
        make(decode_rs_general_sptr self, int gfpoly, int fcr, int prim, int nroots, bool verbose) -> decode_rs_general_sptr

        Return a shared_ptr to a new instance of satellites::decode_rs_general.

        To avoid accidental use of raw pointers, satellites::decode_rs_general's constructor is in a private implementation class. satellites::decode_rs_general::make is the public interface for creating new instances.

        Params: (gfpoly, fcr, prim, nroots, verbose)
        """
        return _satellites_swig.decode_rs_general_sptr_make(self, gfpoly, fcr, prim, nroots, verbose)


    def history(self):
        """history(decode_rs_general_sptr self) -> unsigned int"""
        return _satellites_swig.decode_rs_general_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(decode_rs_general_sptr self, int which, int delay)
        declare_sample_delay(decode_rs_general_sptr self, unsigned int delay)
        """
        return _satellites_swig.decode_rs_general_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(decode_rs_general_sptr self, int which) -> unsigned int"""
        return _satellites_swig.decode_rs_general_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(decode_rs_general_sptr self) -> int"""
        return _satellites_swig.decode_rs_general_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(decode_rs_general_sptr self) -> double"""
        return _satellites_swig.decode_rs_general_sptr_relative_rate(self)


    def start(self):
        """start(decode_rs_general_sptr self) -> bool"""
        return _satellites_swig.decode_rs_general_sptr_start(self)


    def stop(self):
        """stop(decode_rs_general_sptr self) -> bool"""
        return _satellites_swig.decode_rs_general_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(decode_rs_general_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.decode_rs_general_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(decode_rs_general_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.decode_rs_general_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(decode_rs_general_sptr self) -> int"""
        return _satellites_swig.decode_rs_general_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(decode_rs_general_sptr self, int m)"""
        return _satellites_swig.decode_rs_general_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(decode_rs_general_sptr self)"""
        return _satellites_swig.decode_rs_general_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(decode_rs_general_sptr self) -> bool"""
        return _satellites_swig.decode_rs_general_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(decode_rs_general_sptr self, int m)"""
        return _satellites_swig.decode_rs_general_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(decode_rs_general_sptr self) -> int"""
        return _satellites_swig.decode_rs_general_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(decode_rs_general_sptr self, int i) -> long"""
        return _satellites_swig.decode_rs_general_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(decode_rs_general_sptr self, long max_output_buffer)
        set_max_output_buffer(decode_rs_general_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.decode_rs_general_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(decode_rs_general_sptr self, int i) -> long"""
        return _satellites_swig.decode_rs_general_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(decode_rs_general_sptr self, long min_output_buffer)
        set_min_output_buffer(decode_rs_general_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.decode_rs_general_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(decode_rs_general_sptr self, int which) -> float
        pc_input_buffers_full(decode_rs_general_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_general_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(decode_rs_general_sptr self, int which) -> float
        pc_input_buffers_full_avg(decode_rs_general_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_general_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(decode_rs_general_sptr self, int which) -> float
        pc_input_buffers_full_var(decode_rs_general_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_general_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(decode_rs_general_sptr self, int which) -> float
        pc_output_buffers_full(decode_rs_general_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_general_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(decode_rs_general_sptr self, int which) -> float
        pc_output_buffers_full_avg(decode_rs_general_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_general_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(decode_rs_general_sptr self, int which) -> float
        pc_output_buffers_full_var(decode_rs_general_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_general_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(decode_rs_general_sptr self) -> float"""
        return _satellites_swig.decode_rs_general_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(decode_rs_general_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.decode_rs_general_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(decode_rs_general_sptr self)"""
        return _satellites_swig.decode_rs_general_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(decode_rs_general_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.decode_rs_general_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(decode_rs_general_sptr self) -> int"""
        return _satellites_swig.decode_rs_general_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(decode_rs_general_sptr self) -> int"""
        return _satellites_swig.decode_rs_general_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(decode_rs_general_sptr self, int priority) -> int"""
        return _satellites_swig.decode_rs_general_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(decode_rs_general_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_general_sptr_name(self)


    def symbol_name(self):
        """symbol_name(decode_rs_general_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_general_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(decode_rs_general_sptr self) -> io_signature_sptr"""
        return _satellites_swig.decode_rs_general_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(decode_rs_general_sptr self) -> io_signature_sptr"""
        return _satellites_swig.decode_rs_general_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(decode_rs_general_sptr self) -> long"""
        return _satellites_swig.decode_rs_general_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(decode_rs_general_sptr self) -> basic_block_sptr"""
        return _satellites_swig.decode_rs_general_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(decode_rs_general_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.decode_rs_general_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(decode_rs_general_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_general_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(decode_rs_general_sptr self, std::string name)"""
        return _satellites_swig.decode_rs_general_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(decode_rs_general_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.decode_rs_general_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(decode_rs_general_sptr self) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_general_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(decode_rs_general_sptr self) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_general_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(decode_rs_general_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_general_sptr_message_subscribers(self, which_port)

decode_rs_general_sptr_swigregister = _satellites_swig.decode_rs_general_sptr_swigregister
decode_rs_general_sptr_swigregister(decode_rs_general_sptr)


decode_rs_general_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
decode_rs_general = decode_rs_general.make;

class decode_rs_interleaved(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(verbose, basis, codewords):
        """
        make(bool verbose, int basis, int codewords) -> decode_rs_interleaved_sptr

        Return a shared_ptr to a new instance of satellites::decode_rs_interleaved.

        To avoid accidental use of raw pointers, satellites::decode_rs_interleaved's constructor is in a private implementation class. satellites::decode_rs_interleaved::make is the public interface for creating new instances.

        Params: (verbose, basis, codewords)
        """
        return _satellites_swig.decode_rs_interleaved_make(verbose, basis, codewords)

    make = staticmethod(make)
    __swig_destroy__ = _satellites_swig.delete_decode_rs_interleaved
    __del__ = lambda self: None
decode_rs_interleaved_swigregister = _satellites_swig.decode_rs_interleaved_swigregister
decode_rs_interleaved_swigregister(decode_rs_interleaved)

def decode_rs_interleaved_make(verbose, basis, codewords):
    """
    decode_rs_interleaved_make(bool verbose, int basis, int codewords) -> decode_rs_interleaved_sptr

    Return a shared_ptr to a new instance of satellites::decode_rs_interleaved.

    To avoid accidental use of raw pointers, satellites::decode_rs_interleaved's constructor is in a private implementation class. satellites::decode_rs_interleaved::make is the public interface for creating new instances.

    Params: (verbose, basis, codewords)
    """
    return _satellites_swig.decode_rs_interleaved_make(verbose, basis, codewords)

class decode_rs_interleaved_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::satellites::decode_rs_interleaved)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::satellites::decode_rs_interleaved)> self) -> decode_rs_interleaved_sptr
        __init__(boost::shared_ptr<(gr::satellites::decode_rs_interleaved)> self, decode_rs_interleaved p) -> decode_rs_interleaved_sptr
        """
        this = _satellites_swig.new_decode_rs_interleaved_sptr(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __deref__(self):
        """__deref__(decode_rs_interleaved_sptr self) -> decode_rs_interleaved"""
        return _satellites_swig.decode_rs_interleaved_sptr___deref__(self)

    __swig_destroy__ = _satellites_swig.delete_decode_rs_interleaved_sptr
    __del__ = lambda self: None

    def make(self, verbose, basis, codewords):
        """
        make(decode_rs_interleaved_sptr self, bool verbose, int basis, int codewords) -> decode_rs_interleaved_sptr

        Return a shared_ptr to a new instance of satellites::decode_rs_interleaved.

        To avoid accidental use of raw pointers, satellites::decode_rs_interleaved's constructor is in a private implementation class. satellites::decode_rs_interleaved::make is the public interface for creating new instances.

        Params: (verbose, basis, codewords)
        """
        return _satellites_swig.decode_rs_interleaved_sptr_make(self, verbose, basis, codewords)


    def history(self):
        """history(decode_rs_interleaved_sptr self) -> unsigned int"""
        return _satellites_swig.decode_rs_interleaved_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(decode_rs_interleaved_sptr self, int which, int delay)
        declare_sample_delay(decode_rs_interleaved_sptr self, unsigned int delay)
        """
        return _satellites_swig.decode_rs_interleaved_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(decode_rs_interleaved_sptr self, int which) -> unsigned int"""
        return _satellites_swig.decode_rs_interleaved_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(decode_rs_interleaved_sptr self) -> int"""
        return _satellites_swig.decode_rs_interleaved_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(decode_rs_interleaved_sptr self) -> double"""
        return _satellites_swig.decode_rs_interleaved_sptr_relative_rate(self)


    def start(self):
        """start(decode_rs_interleaved_sptr self) -> bool"""
        return _satellites_swig.decode_rs_interleaved_sptr_start(self)


    def stop(self):
        """stop(decode_rs_interleaved_sptr self) -> bool"""
        return _satellites_swig.decode_rs_interleaved_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(decode_rs_interleaved_sptr self, unsigned int which_input) -> uint64_t"""
        return _satellites_swig.decode_rs_interleaved_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(decode_rs_interleaved_sptr self, unsigned int which_output) -> uint64_t"""
        return _satellites_swig.decode_rs_interleaved_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(decode_rs_interleaved_sptr self) -> int"""
        return _satellites_swig.decode_rs_interleaved_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(decode_rs_interleaved_sptr self, int m)"""
        return _satellites_swig.decode_rs_interleaved_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(decode_rs_interleaved_sptr self)"""
        return _satellites_swig.decode_rs_interleaved_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(decode_rs_interleaved_sptr self) -> bool"""
        return _satellites_swig.decode_rs_interleaved_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(decode_rs_interleaved_sptr self, int m)"""
        return _satellites_swig.decode_rs_interleaved_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(decode_rs_interleaved_sptr self) -> int"""
        return _satellites_swig.decode_rs_interleaved_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(decode_rs_interleaved_sptr self, int i) -> long"""
        return _satellites_swig.decode_rs_interleaved_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(decode_rs_interleaved_sptr self, long max_output_buffer)
        set_max_output_buffer(decode_rs_interleaved_sptr self, int port, long max_output_buffer)
        """
        return _satellites_swig.decode_rs_interleaved_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(decode_rs_interleaved_sptr self, int i) -> long"""
        return _satellites_swig.decode_rs_interleaved_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(decode_rs_interleaved_sptr self, long min_output_buffer)
        set_min_output_buffer(decode_rs_interleaved_sptr self, int port, long min_output_buffer)
        """
        return _satellites_swig.decode_rs_interleaved_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(decode_rs_interleaved_sptr self, int which) -> float
        pc_input_buffers_full(decode_rs_interleaved_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_interleaved_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(decode_rs_interleaved_sptr self, int which) -> float
        pc_input_buffers_full_avg(decode_rs_interleaved_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_interleaved_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(decode_rs_interleaved_sptr self, int which) -> float
        pc_input_buffers_full_var(decode_rs_interleaved_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_interleaved_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(decode_rs_interleaved_sptr self, int which) -> float
        pc_output_buffers_full(decode_rs_interleaved_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_interleaved_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(decode_rs_interleaved_sptr self, int which) -> float
        pc_output_buffers_full_avg(decode_rs_interleaved_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_interleaved_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(decode_rs_interleaved_sptr self, int which) -> float
        pc_output_buffers_full_var(decode_rs_interleaved_sptr self) -> pmt_vector_float
        """
        return _satellites_swig.decode_rs_interleaved_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(decode_rs_interleaved_sptr self) -> float"""
        return _satellites_swig.decode_rs_interleaved_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(decode_rs_interleaved_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _satellites_swig.decode_rs_interleaved_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(decode_rs_interleaved_sptr self)"""
        return _satellites_swig.decode_rs_interleaved_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(decode_rs_interleaved_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _satellites_swig.decode_rs_interleaved_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(decode_rs_interleaved_sptr self) -> int"""
        return _satellites_swig.decode_rs_interleaved_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(decode_rs_interleaved_sptr self) -> int"""
        return _satellites_swig.decode_rs_interleaved_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(decode_rs_interleaved_sptr self, int priority) -> int"""
        return _satellites_swig.decode_rs_interleaved_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(decode_rs_interleaved_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_interleaved_sptr_name(self)


    def symbol_name(self):
        """symbol_name(decode_rs_interleaved_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_interleaved_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(decode_rs_interleaved_sptr self) -> io_signature_sptr"""
        return _satellites_swig.decode_rs_interleaved_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(decode_rs_interleaved_sptr self) -> io_signature_sptr"""
        return _satellites_swig.decode_rs_interleaved_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(decode_rs_interleaved_sptr self) -> long"""
        return _satellites_swig.decode_rs_interleaved_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(decode_rs_interleaved_sptr self) -> basic_block_sptr"""
        return _satellites_swig.decode_rs_interleaved_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(decode_rs_interleaved_sptr self, int ninputs, int noutputs) -> bool"""
        return _satellites_swig.decode_rs_interleaved_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(decode_rs_interleaved_sptr self) -> std::string"""
        return _satellites_swig.decode_rs_interleaved_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(decode_rs_interleaved_sptr self, std::string name)"""
        return _satellites_swig.decode_rs_interleaved_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(decode_rs_interleaved_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _satellites_swig.decode_rs_interleaved_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(decode_rs_interleaved_sptr self) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_interleaved_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(decode_rs_interleaved_sptr self) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_interleaved_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(decode_rs_interleaved_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _satellites_swig.decode_rs_interleaved_sptr_message_subscribers(self, which_port)

decode_rs_interleaved_sptr_swigregister = _satellites_swig.decode_rs_interleaved_sptr_swigregister
decode_rs_interleaved_sptr_swigregister(decode_rs_interleaved_sptr)


decode_rs_interleaved_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
decode_rs_interleaved = decode_rs_interleaved.make;



